VM Arguments: 
sun.java.command=Harness List 10 10000
                              @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                              @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 17  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=0.276802, probability=0.215818, bonus=1.000000, nodes=9)
                              @ 27  java.lang.StringLatin1.hashCode(byte[]):int (52 bytes)   relevance-based (relevance=0.276802, probability=0.215818, bonus=1.000000, nodes=22 <= 83.040549)
                              @ 4  java.lang.CharacterDataLatin1.getProperties(int):int (11 bytes)   trivial (relevance=1.605340, probability=1.000000, bonus=1.000000, nodes=8)
                                  @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.445931, probability=0.250627, bonus=1.000000, nodes=7)
                            @ 16  java.lang.StringBuilder.<init>():void (7 bytes)   inline method (bytecode parsing)
                            @ 21  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 25  java.lang.StringBuilder.append(int):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 30  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 34  java.lang.StringBuilder.append(int):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 39  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 42  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 45  java.lang.OutOfMemoryError.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.VirtualMachineError.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Error.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                      @ 16  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.334448, probability=0.093985, bonus=1.000000, nodes=8)
                                    @ 3  java.lang.AbstractStringBuilder.<init>(int):void (44 bytes)   relevance-based (relevance=0.334448, probability=0.093985, bonus=1.000000, nodes=14 <= 100.334547)
                                        @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=0.334448, probability=0.093985, bonus=1.000000, nodes=5)
                                      @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=0.334448, probability=0.093985, bonus=1.000000, nodes=5)
                                            @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.149141, probability=0.023555, bonus=1.000000, nodes=7)
                            @ 16  java.lang.StringBuilder.<init>():void (7 bytes)   inline method (bytecode parsing)
                            @ 21  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 25  java.lang.StringBuilder.append(int):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 30  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 34  java.lang.StringBuilder.append(int):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 39  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 42  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 45  java.lang.OutOfMemoryError.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.VirtualMachineError.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Error.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                            @ 23  jdk.internal.util.ArraysSupport.hugeLength(int, int):int (60 bytes)   not inlining relevance-based (relevance=0.111856, probability=0.017666, bonus=1.000000, nodes=59 > 33.556738)
                                          @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.111856, probability=0.023555, bonus=1.000000, nodes=20 <= 33.556738)
                                        @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   not inlining relevance-based (relevance=0.111856, probability=0.023555, bonus=1.000000, nodes=37 > 33.556738)
                                          @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.111857, probability=0.023535, bonus=1.000000, nodes=8)
                                          @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.111857, probability=0.023535, bonus=1.000000, nodes=7)
                                        @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.111856, probability=0.023555, bonus=1.000000, nodes=31 <= 33.556738)
                                      @ 21  java.lang.AbstractStringBuilder.ensureCapacityInternal(int):void (39 bytes)   relevance-based (relevance=0.334448, probability=0.093985, bonus=1.000000, nodes=57 <= 100.334547)
                                          @ 11  java.lang.String.coder():byte (15 bytes)   trivial (relevance=0.446303, probability=0.093985, bonus=1.000000, nodes=5)
                                        @ 2  java.lang.AbstractStringBuilder.inflateIfNeededFor(String):void (22 bytes)   trivial (relevance=0.446303, probability=0.093985, bonus=1.000000, nodes=9)
                                          @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=0.446308, probability=0.093985, bonus=1.000000, nodes=5)
                                        @ 15  java.lang.String.getBytes(byte[], int, byte):void (44 bytes)   relevance-based (relevance=0.446303, probability=0.093985, bonus=1.000000, nodes=22 <= 133.890949)
                                      @ 30  java.lang.AbstractStringBuilder.putStringAt(int, String):void (19 bytes)   relevance-based (relevance=0.446303, probability=0.093985, bonus=1.000000, nodes=27 <= 133.890949)
                                    @ 2  java.lang.AbstractStringBuilder.append(String):AbstractStringBuilder (45 bytes)   relevance-based (relevance=0.334448, probability=0.093985, bonus=1.000000, nodes=86 <= 100.334547)
                                  @ 23  jdk.internal.util.ArraysSupport.hugeLength(int, int):int (60 bytes)   not inlining relevance-based (relevance=0.334448, probability=0.187970, bonus=1.000000, nodes=143 > 100.334547)
                                @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.334448, probability=0.250627, bonus=1.000000, nodes=20 <= 100.334547)
                              @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   relevance-based (relevance=0.334448, probability=0.250627, bonus=1.000000, nodes=37 <= 100.334547)
                                @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.334452, probability=0.250416, bonus=1.000000, nodes=8)
                                @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.334452, probability=0.250416, bonus=1.000000, nodes=7)
                              @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.334448, probability=0.250627, bonus=1.000000, nodes=31 <= 100.334547)
                              @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=5)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                                    @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=7)
                                  @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=15 <= 99.893986)
                                @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=27 <= 99.893986)
                                  @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.332983, probability=0.249598, bonus=1.000000, nodes=8)
                                  @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.332983, probability=0.249598, bonus=1.000000, nodes=7)
                                @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=31 <= 99.893986)
                              @ 21  java.lang.AbstractStringBuilder.ensureCapacityInternal(int):void (39 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=75 <= 300.000000)
                                  @ 11  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=5)
                                @ 2  java.lang.AbstractStringBuilder.inflateIfNeededFor(String):void (22 bytes)   relevance-based (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=12 <= 300.000000)
                                  @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000010, probability=0.999998, bonus=1.000000, nodes=5)
                                @ 15  java.lang.String.getBytes(byte[], int, byte):void (44 bytes)   relevance-based (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=26 <= 300.000000)
                              @ 30  java.lang.AbstractStringBuilder.putStringAt(int, String):void (19 bytes)   relevance-based (relevance=1.332977, probability=0.999998, bonus=1.000000, nodes=37 <= 300.000000)
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 41  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=0.728612, probability=0.728612, bonus=1.000000, nodes=8)
                            @ 11  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 29  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 44  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                  @ 12  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.728612, probability=0.728612, bonus=1.000000, nodes=8)
                                @ 51  jdk.internal.misc.Unsafe.allocateUninitializedArray0(Class, int):Object (123 bytes)   relevance-based (relevance=0.728612, probability=0.728612, bonus=1.000000, nodes=10 <= 218.583709)
                              @ 33  jdk.internal.misc.Unsafe.allocateUninitializedArray(Class, int):Object (55 bytes)   relevance-based (relevance=0.728612, probability=0.728612, bonus=1.000000, nodes=11 <= 218.583709)
                 n            @ 20  com.jprofiler.agent.AllocationCallee.registerAllocation0(Object, Class):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   relevance-based (relevance=0.728612, probability=0.728612, bonus=1.000000, nodes=18 <= 218.583709)
                              @ 44  java.lang.StringLatin1.equals(byte[], byte[]):boolean (36 bytes)   relevance-based (relevance=1.000000, probability=0.825841, bonus=1.000000, nodes=33 <= 300.000000)
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 41  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=0.788555, probability=0.731579, bonus=1.000000, nodes=8)
                            @ 11  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 29  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 44  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                  @ 12  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.788555, probability=0.365789, bonus=1.000000, nodes=8)
                                @ 51  jdk.internal.misc.Unsafe.allocateUninitializedArray0(Class, int):Object (123 bytes)   relevance-based (relevance=0.788555, probability=0.365789, bonus=1.000000, nodes=10 <= 236.566542)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                  @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=0.788555, probability=0.365789, bonus=1.000000, nodes=8)
                 n                @ 16  java.lang.Throwable.fillInStackTrace(int):Throwable (0 bytes)   not inlining it is a non-intrinsic native method
              s                   @ 24  java.lang.Throwable.fillInStackTrace():Throwable (29 bytes)   relevance-based (relevance=0.788555, probability=0.365789, bonus=1.000000, nodes=34 <= 236.566542)
                                @ 2  java.lang.Throwable.<init>(String):void (34 bytes)   relevance-based (relevance=0.788555, probability=0.365789, bonus=1.000000, nodes=48 <= 236.566542)
                              @ 33  jdk.internal.misc.Unsafe.allocateUninitializedArray(Class, int):Object (55 bytes)   relevance-based (relevance=0.788555, probability=0.731579, bonus=1.000000, nodes=64 <= 236.566542)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=0.788555, probability=0.731579, bonus=1.000000, nodes=8)
                              @ 44  java.lang.StringLatin1.equals(byte[], byte[]):boolean (36 bytes)   relevance-based (relevance=1.000000, probability=0.826745, bonus=1.000000, nodes=33 <= 300.000000)
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.159068, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 1  java.lang.String.length():int (11 bytes)   trivial (relevance=1.178038, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 51  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.178040, probability=0.151131, bonus=1.000000, nodes=8)
                              @ 43  jdk.internal.org.objectweb.asm.ByteVector.enlarge(int):void (78 bytes)   relevance-based (relevance=0.178038, probability=0.151131, bonus=1.000000, nodes=36 <= 53.411514)
                                @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=23.730317, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                                @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=23.730317, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 85  java.lang.String.charAt(int):char (25 bytes)   relevance-based (relevance=1.000000, probability=23.730317, bonus=1.000000, nodes=16 <= 300.000000)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.890058, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.890058, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.890058, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.890058, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 41  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=0.740446, probability=0.740446, bonus=1.000000, nodes=8)
                            @ 11  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 29  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 44  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                  @ 12  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.740446, probability=0.740446, bonus=1.000000, nodes=8)
                                @ 51  jdk.internal.misc.Unsafe.allocateUninitializedArray0(Class, int):Object (123 bytes)   relevance-based (relevance=0.740446, probability=0.740446, bonus=1.000000, nodes=10 <= 222.133939)
                              @ 33  jdk.internal.misc.Unsafe.allocateUninitializedArray(Class, int):Object (55 bytes)   relevance-based (relevance=0.740446, probability=0.740446, bonus=1.000000, nodes=11 <= 222.133939)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=0.740446, probability=0.740446, bonus=1.000000, nodes=8)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 31  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 57  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=5.852327, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=5.852327, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=5.852327, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=5.852327, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=6.122540, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=6.122540, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=6.122540, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.046172, probability=6.122540, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 36  List$Element.getNext():List$Element (34 bytes)   relevance-based (relevance=1.000000, probability=6.424427, bonus=1.000000, nodes=118 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=5.852327, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=5.852327, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=5.852327, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=5.852327, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=6.122540, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=6.122540, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=6.122540, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.046172, probability=6.122540, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 42  List$Element.getNext():List$Element (34 bytes)   relevance-based (relevance=1.097756, probability=6.424427, bonus=1.000000, nodes=118 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.261330, probability=0.238058, bonus=1.000000, nodes=21 <= 78.398896)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.261330, probability=0.238058, bonus=1.000000, nodes=28 <= 78.398896)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.261330, probability=0.238058, bonus=1.000000, nodes=34 <= 78.398896)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.261330, probability=0.238058, bonus=1.000000, nodes=47 <= 78.398896)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.784842, probability=0.714951, bonus=1.000000, nodes=21 <= 235.452670)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.784842, probability=0.714951, bonus=1.000000, nodes=28 <= 235.452670)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.784842, probability=0.714951, bonus=1.000000, nodes=34 <= 235.452670)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.784842, probability=0.714951, bonus=1.000000, nodes=47 <= 235.452670)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                              @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                  @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                                @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                              @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=34 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 31  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 57  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                              @ 13  List.isShorterThan(List$Element, List$Element):boolean (71 bytes)   not inlining too large previous low-level graph (low-level-nodes: 945, relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=89)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=21 <= 82.270569)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=28 <= 82.270569)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=34 <= 82.270569)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=47 <= 82.270569)
                              @ 22  List$Element.getNext():List$Element (34 bytes)   not inlining relevance-based (relevance=0.274235, probability=0.249814, bonus=1.000000, nodes=85 > 82.270569)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                              @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (84 bytes)   not inlining relevance-based (relevance=0.274235, probability=0.249814, bonus=1.000000, nodes=96 > 82.270569)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=21 <= 82.270569)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=28 <= 82.270569)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=34 <= 82.270569)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=47 <= 82.270569)
                              @ 32  List$Element.getNext():List$Element (34 bytes)   not inlining relevance-based (relevance=0.274235, probability=0.249814, bonus=1.000000, nodes=85 > 82.270569)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                              @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (84 bytes)   not inlining relevance-based (relevance=0.274235, probability=0.249814, bonus=1.000000, nodes=96 > 82.270569)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=21 <= 82.270569)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=28 <= 82.270569)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=34 <= 82.270569)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.274235, probability=0.227568, bonus=1.000000, nodes=47 <= 82.270569)
                              @ 42  List$Element.getNext():List$Element (34 bytes)   not inlining relevance-based (relevance=0.274235, probability=0.249814, bonus=1.000000, nodes=85 > 82.270569)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                              @ 47  List.tail(List$Element, List$Element, List$Element):List$Element (84 bytes)   not inlining relevance-based (relevance=0.274235, probability=0.249814, bonus=1.000000, nodes=96 > 82.270569)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                              @ 50  List.tail(List$Element, List$Element, List$Element):List$Element (84 bytes)   not inlining relevance-based (relevance=0.274235, probability=0.249814, bonus=1.000000, nodes=96 > 82.270569)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.266727, probability=0.242975, bonus=1.000000, nodes=21 <= 80.018156)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.266727, probability=0.242975, bonus=1.000000, nodes=28 <= 80.018156)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.266727, probability=0.242975, bonus=1.000000, nodes=34 <= 80.018156)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.266727, probability=0.242975, bonus=1.000000, nodes=47 <= 80.018156)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.800974, probability=0.729647, bonus=1.000000, nodes=21 <= 240.292322)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.800974, probability=0.729647, bonus=1.000000, nodes=28 <= 240.292322)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.800974, probability=0.729647, bonus=1.000000, nodes=34 <= 240.292322)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.800974, probability=0.729647, bonus=1.000000, nodes=47 <= 240.292322)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.973639, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.973639, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.973639, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.973639, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.973744, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.973744, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.973744, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.068934, probability=0.973744, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.490029, probability=0.328872, bonus=1.000000, nodes=21 <= 147.008712)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.490029, probability=0.328872, bonus=1.000000, nodes=28 <= 147.008712)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.490029, probability=0.328872, bonus=1.000000, nodes=34 <= 147.008712)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.490029, probability=0.328872, bonus=1.000000, nodes=47 <= 147.008712)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 21  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 36  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 48  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 57  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 60  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 69  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 91  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.419353, probability=0.382009, bonus=1.000000, nodes=21 <= 125.805761)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.419353, probability=0.382009, bonus=1.000000, nodes=28 <= 125.805761)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.419353, probability=0.382009, bonus=1.000000, nodes=34 <= 125.805761)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.419353, probability=0.382009, bonus=1.000000, nodes=47 <= 125.805761)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.094487, probability=0.086073, bonus=1.000000, nodes=21 <= 28.346185)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.094487, probability=0.086073, bonus=1.000000, nodes=28 <= 28.346185)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.094487, probability=0.086073, bonus=1.000000, nodes=34 > 28.346185)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.094487, probability=0.086073, bonus=1.000000, nodes=12 <= 28.346185)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.422342, probability=0.384732, bonus=1.000000, nodes=21 <= 126.702636)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.422342, probability=0.384732, bonus=1.000000, nodes=28 <= 126.702636)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.422342, probability=0.384732, bonus=1.000000, nodes=34 <= 126.702636)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.422342, probability=0.384732, bonus=1.000000, nodes=47 <= 126.702636)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.911765, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.911765, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.911765, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000895, probability=0.911765, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000895, probability=0.911765, bonus=1.000000, nodes=8)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.976369, probability=0.889422, bonus=1.000000, nodes=21 <= 292.910574)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.976369, probability=0.889422, bonus=1.000000, nodes=28 <= 292.910574)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.976369, probability=0.889422, bonus=1.000000, nodes=34 <= 292.910574)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.976369, probability=0.889422, bonus=1.000000, nodes=47 <= 292.910574)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 21  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 36  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 48  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 57  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 60  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 69  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 91  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.830571, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.830571, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.830571, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.830571, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.419353, probability=0.348302, bonus=1.000000, nodes=21 <= 125.805761)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.419353, probability=0.348302, bonus=1.000000, nodes=28 <= 125.805761)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.419353, probability=0.348302, bonus=1.000000, nodes=34 <= 125.805761)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.419353, probability=0.348302, bonus=1.000000, nodes=47 <= 125.805761)
                 n            @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.094487, probability=0.078478, bonus=1.000000, nodes=21 <= 28.346185)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.094487, probability=0.078478, bonus=1.000000, nodes=28 <= 28.346185)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.094487, probability=0.078478, bonus=1.000000, nodes=34 > 28.346185)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.094487, probability=0.078478, bonus=1.000000, nodes=12 <= 28.346185)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.422342, probability=0.350785, bonus=1.000000, nodes=21 <= 126.702636)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.422342, probability=0.350785, bonus=1.000000, nodes=28 <= 126.702636)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.422342, probability=0.350785, bonus=1.000000, nodes=34 <= 126.702636)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.422342, probability=0.350785, bonus=1.000000, nodes=47 <= 126.702636)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.831315, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.831315, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.831315, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000895, probability=0.831315, bonus=1.000000, nodes=47 <= 300.000000)
                              @ 78  List.makeList(int):List$Element (105 bytes)   not inlining relevance-based (relevance=1.000895, probability=0.911765, bonus=1.000000, nodes=304 > 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 21  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.830571, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.830571, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.830571, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.830571, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.889422, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.889422, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.889422, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.070856, probability=0.889422, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 81  List$Element.setNext(List$Element):void (35 bytes)   relevance-based (relevance=1.000895, probability=0.911765, bonus=1.000000, nodes=120 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.976369, probability=0.889422, bonus=1.000000, nodes=21 <= 292.910574)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.976369, probability=0.889422, bonus=1.000000, nodes=28 <= 292.910574)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.976369, probability=0.889422, bonus=1.000000, nodes=34 <= 292.910574)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.976369, probability=0.889422, bonus=1.000000, nodes=47 <= 292.910574)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.800692, probability=0.444658, bonus=1.000000, nodes=21 <= 240.207473)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.800692, probability=0.444658, bonus=1.000000, nodes=28 <= 240.207473)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.800692, probability=0.444658, bonus=1.000000, nodes=34 <= 240.207473)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.800692, probability=0.444658, bonus=1.000000, nodes=47 <= 240.207473)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.987980, probability=0.819854, bonus=1.000000, nodes=21 <= 296.394143)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.987980, probability=0.819854, bonus=1.000000, nodes=28 <= 296.394143)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.987980, probability=0.819854, bonus=1.000000, nodes=34 <= 296.394143)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.987980, probability=0.819854, bonus=1.000000, nodes=47 <= 296.394143)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.976105, probability=0.737869, bonus=1.000000, nodes=21 <= 292.831627)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.976105, probability=0.737869, bonus=1.000000, nodes=28 <= 292.831627)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.976105, probability=0.737869, bonus=1.000000, nodes=34 <= 292.831627)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.976105, probability=0.737869, bonus=1.000000, nodes=47 <= 292.831627)
                 n              @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.964373, probability=0.664082, bonus=1.000000, nodes=21 <= 289.311930)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.964373, probability=0.664082, bonus=1.000000, nodes=28 <= 289.311930)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.964373, probability=0.664082, bonus=1.000000, nodes=34 <= 289.311930)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.964373, probability=0.664082, bonus=1.000000, nodes=47 <= 289.311930)
                 n                @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.952782, probability=0.597674, bonus=1.000000, nodes=21 <= 285.834539)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.952782, probability=0.597674, bonus=1.000000, nodes=28 <= 285.834539)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.952782, probability=0.597674, bonus=1.000000, nodes=34 <= 285.834539)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.952782, probability=0.597674, bonus=1.000000, nodes=47 <= 285.834539)
                 n                  @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.941330, probability=0.537906, bonus=1.000000, nodes=21 <= 282.398944)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.941330, probability=0.537906, bonus=1.000000, nodes=28 <= 282.398944)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.941330, probability=0.537906, bonus=1.000000, nodes=34 <= 282.398944)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.941330, probability=0.537906, bonus=1.000000, nodes=47 <= 282.398944)
                 n                    @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                                      @ 33  List$Element.length():int (57 bytes)   not inlining it exceeds the maximum recursive inlining depth
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.907828, probability=0.518762, bonus=1.000000, nodes=21 <= 272.348300)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.907828, probability=0.518762, bonus=1.000000, nodes=28 <= 272.348300)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.907828, probability=0.518762, bonus=1.000000, nodes=34 <= 272.348300)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.907828, probability=0.518762, bonus=1.000000, nodes=47 <= 272.348300)
                 n                    @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.100870, probability=0.057640, bonus=1.000000, nodes=21 <= 30.260922)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.100870, probability=0.057640, bonus=1.000000, nodes=28 <= 30.260922)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.100870, probability=0.057640, bonus=1.000000, nodes=34 > 30.260922)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.100870, probability=0.057640, bonus=1.000000, nodes=12 <= 30.260922)
                 n                    @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                      @ 33  List$Element.length():int (57 bytes)   relevance-based (relevance=0.941330, probability=0.590490, bonus=1.000000, nodes=154 <= 282.398944)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.918872, probability=0.576402, bonus=1.000000, nodes=21 <= 275.661621)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.918872, probability=0.576402, bonus=1.000000, nodes=28 <= 275.661621)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.918872, probability=0.576402, bonus=1.000000, nodes=34 <= 275.661621)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.918872, probability=0.576402, bonus=1.000000, nodes=47 <= 275.661621)
                 n                  @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.102097, probability=0.064045, bonus=1.000000, nodes=21 <= 30.629069)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.102097, probability=0.064045, bonus=1.000000, nodes=28 <= 30.629069)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.102097, probability=0.064045, bonus=1.000000, nodes=34 > 30.629069)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.102097, probability=0.064045, bonus=1.000000, nodes=12 <= 30.629069)
                                    @ 33  List$Element.length():int (57 bytes)   not inlining relevance-based (relevance=0.952782, probability=0.656100, bonus=1.000000, nodes=290 > 285.834539)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.930051, probability=0.640447, bonus=1.000000, nodes=21 <= 279.015251)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.930051, probability=0.640447, bonus=1.000000, nodes=28 <= 279.015251)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.930051, probability=0.640447, bonus=1.000000, nodes=34 <= 279.015251)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.930051, probability=0.640447, bonus=1.000000, nodes=47 <= 279.015251)
                 n                @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.103339, probability=0.071161, bonus=1.000000, nodes=21 <= 31.001695)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.103339, probability=0.071161, bonus=1.000000, nodes=28 <= 31.001695)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.103339, probability=0.071161, bonus=1.000000, nodes=34 > 31.001695)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.103339, probability=0.071161, bonus=1.000000, nodes=12 <= 31.001695)
                 n                @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                  @ 33  List$Element.length():int (57 bytes)   relevance-based (relevance=0.964373, probability=0.729000, bonus=1.000000, nodes=154 <= 289.311930)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.941366, probability=0.711608, bonus=1.000000, nodes=21 <= 282.409681)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.941366, probability=0.711608, bonus=1.000000, nodes=28 <= 282.409681)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.941366, probability=0.711608, bonus=1.000000, nodes=34 <= 282.409681)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.941366, probability=0.711608, bonus=1.000000, nodes=47 <= 282.409681)
                 n              @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.104596, probability=0.079068, bonus=1.000000, nodes=21 <= 31.378853)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.104596, probability=0.079068, bonus=1.000000, nodes=28 <= 31.378853)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.104596, probability=0.079068, bonus=1.000000, nodes=34 > 31.378853)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.104596, probability=0.079068, bonus=1.000000, nodes=12 <= 31.378853)
                 n              @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 33  List$Element.length():int (57 bytes)   relevance-based (relevance=0.976105, probability=0.810000, bonus=1.000000, nodes=290 <= 292.831627)
                              @ 33  List$Element.length():int (57 bytes)   not inlining relevance-based (relevance=0.987980, probability=0.900000, bonus=1.000000, nodes=386 > 296.394143)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.964410, probability=0.878528, bonus=1.000000, nodes=21 <= 289.322930)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.964410, probability=0.878528, bonus=1.000000, nodes=28 <= 289.322930)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.964410, probability=0.878528, bonus=1.000000, nodes=34 <= 289.322930)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.964410, probability=0.878528, bonus=1.000000, nodes=47 <= 289.322930)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.107157, probability=0.097614, bonus=1.000000, nodes=21 <= 32.146992)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.107157, probability=0.097614, bonus=1.000000, nodes=28 <= 32.146992)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.107157, probability=0.097614, bonus=1.000000, nodes=34 > 32.146992)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.107157, probability=0.097614, bonus=1.000000, nodes=12 <= 32.146992)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 49  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.976527, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.976527, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.976527, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.071988, probability=0.976527, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                                    @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=7)
                                  @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=15 <= 99.893986)
                                @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=27 <= 99.893986)
                                  @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.332983, probability=0.249406, bonus=1.000000, nodes=8)
                                  @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.332983, probability=0.249406, bonus=1.000000, nodes=7)
                                @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=31 <= 99.893986)
                              @ 21  java.lang.AbstractStringBuilder.ensureCapacityInternal(int):void (39 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=75 <= 300.000000)
                                  @ 11  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=5)
                                @ 2  java.lang.AbstractStringBuilder.inflateIfNeededFor(String):void (22 bytes)   relevance-based (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=12 <= 300.000000)
                                  @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000010, probability=0.999998, bonus=1.000000, nodes=5)
                                @ 15  java.lang.String.getBytes(byte[], int, byte):void (44 bytes)   relevance-based (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=26 <= 300.000000)
                              @ 30  java.lang.AbstractStringBuilder.putStringAt(int, String):void (19 bytes)   relevance-based (relevance=1.332977, probability=0.999998, bonus=1.000000, nodes=37 <= 300.000000)
                              @ 2  java.lang.AbstractStringBuilder.append(String):AbstractStringBuilder (45 bytes)   not inlining too large previous low-level graph (low-level-nodes: 331, relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=23)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 5  java.lang.AbstractStringBuilder.getValue():byte[] (5 bytes)   inline accessor method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 1  java.lang.AbstractStringBuilder.length():int (5 bytes)   inline accessor method (bytecode parsing)
                              @ 10  java.lang.StringBuilder.length():int (5 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 16  java.lang.AbstractStringBuilder.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                            @ 13  java.util.Arrays.copyOfRangeByte(byte[], int, int):byte[] (38 bytes)   inline method (bytecode parsing)
                              @ 3  java.util.Arrays.checkLength(int, int):void (38 bytes)   inline method (bytecode parsing)
                                @ 14  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000010, probability=0.854634, bonus=1.000000, nodes=8)
                                @ 29  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.000010, probability=0.854634, bonus=1.000000, nodes=7)
                              @ 32  java.util.Arrays.copyOfRange(byte[], int, int):byte[] (25 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=36 <= 300.000000)
                            @ 2  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 16  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 55  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 64  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 21  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 36  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 48  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 57  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 60  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 69  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 91  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=21 <= 264.095461)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=28 <= 264.095461)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=34 <= 264.095461)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=47 <= 264.095461)
                 n            @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=21 <= 265.394595)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=28 <= 265.394595)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=34 <= 265.394595)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=47 <= 265.394595)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.072835, probability=0.977298, bonus=1.000000, nodes=47 <= 300.000000)
                              @ 14  List.makeList(int):List$Element (105 bytes)   not inlining relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=304 > 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 21  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 36  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 48  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 57  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 60  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 69  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 91  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=21 <= 264.095461)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=28 <= 264.095461)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=34 <= 264.095461)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=47 <= 264.095461)
                 n            @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=21 <= 265.394595)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=28 <= 265.394595)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=34 <= 265.394595)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=47 <= 265.394595)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.072835, probability=0.977298, bonus=1.000000, nodes=47 <= 300.000000)
                              @ 20  List.makeList(int):List$Element (105 bytes)   not inlining relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=304 > 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 21  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 36  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 48  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 57  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 60  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 69  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 91  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=21 <= 264.095461)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=28 <= 264.095461)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=34 <= 264.095461)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=47 <= 264.095461)
                 n            @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=21 <= 265.394595)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=28 <= 265.394595)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=34 <= 265.394595)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=47 <= 265.394595)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.072835, probability=0.977298, bonus=1.000000, nodes=47 <= 300.000000)
                              @ 26  List.makeList(int):List$Element (105 bytes)   not inlining relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=304 > 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 31  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 57  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=5.853244, bonus=1.000000, nodes=21 <= 300.000000)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=5.853244, bonus=1.000000, nodes=28 <= 300.000000)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=5.853244, bonus=1.000000, nodes=34 <= 300.000000)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=5.853244, bonus=1.000000, nodes=47 <= 300.000000)
                 n                @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=6.279567, bonus=1.000000, nodes=21 <= 300.000000)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=6.279567, bonus=1.000000, nodes=28 <= 300.000000)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=6.279567, bonus=1.000000, nodes=34 <= 300.000000)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.072835, probability=6.279567, bonus=1.000000, nodes=47 <= 300.000000)
                 n                @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                  @ 36  List$Element.getNext():List$Element (34 bytes)   relevance-based (relevance=1.000000, probability=6.425434, bonus=1.000000, nodes=118 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=5.853244, bonus=1.000000, nodes=21 <= 300.000000)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=5.853244, bonus=1.000000, nodes=28 <= 300.000000)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=5.853244, bonus=1.000000, nodes=34 <= 300.000000)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=5.853244, bonus=1.000000, nodes=47 <= 300.000000)
                 n                @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=6.279567, bonus=1.000000, nodes=21 <= 300.000000)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=6.279567, bonus=1.000000, nodes=28 <= 300.000000)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=6.279567, bonus=1.000000, nodes=34 <= 300.000000)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.072835, probability=6.279567, bonus=1.000000, nodes=47 <= 300.000000)
                 n                @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                  @ 42  List$Element.getNext():List$Element (34 bytes)   relevance-based (relevance=1.097756, probability=6.425434, bonus=1.000000, nodes=118 <= 300.000000)
                                @ 13  List.isShorterThan(List$Element, List$Element):boolean (71 bytes)   not inlining relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=335 > 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=21 <= 82.316149)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=28 <= 82.316149)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=34 <= 82.316149)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=47 <= 82.316149)
                                @ 22  List$Element.getNext():List$Element (34 bytes)   not inlining relevance-based (relevance=0.274387, probability=0.249953, bonus=1.000000, nodes=85 > 82.316149)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                                @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (84 bytes)   not inlining relevance-based (relevance=0.274387, probability=0.249953, bonus=1.000000, nodes=96 > 82.316149)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=21 <= 82.316149)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=28 <= 82.316149)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=34 <= 82.316149)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=47 <= 82.316149)
                                @ 32  List$Element.getNext():List$Element (34 bytes)   not inlining relevance-based (relevance=0.274387, probability=0.249953, bonus=1.000000, nodes=85 > 82.316149)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                                @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (84 bytes)   not inlining relevance-based (relevance=0.274387, probability=0.249953, bonus=1.000000, nodes=96 > 82.316149)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=21 <= 82.316149)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=28 <= 82.316149)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=34 <= 82.316149)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.274387, probability=0.227694, bonus=1.000000, nodes=47 <= 82.316149)
                                @ 42  List$Element.getNext():List$Element (34 bytes)   not inlining relevance-based (relevance=0.274387, probability=0.249953, bonus=1.000000, nodes=85 > 82.316149)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                                @ 47  List.tail(List$Element, List$Element, List$Element):List$Element (84 bytes)   not inlining relevance-based (relevance=0.274387, probability=0.249953, bonus=1.000000, nodes=96 > 82.316149)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                                @ 50  List.tail(List$Element, List$Element, List$Element):List$Element (84 bytes)   not inlining relevance-based (relevance=0.274387, probability=0.249953, bonus=1.000000, nodes=96 > 82.316149)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.268158, probability=0.244278, bonus=1.000000, nodes=21 <= 80.447448)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.268158, probability=0.244278, bonus=1.000000, nodes=28 <= 80.447448)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.268158, probability=0.244278, bonus=1.000000, nodes=34 <= 80.447448)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.268158, probability=0.244278, bonus=1.000000, nodes=47 <= 80.447448)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.804677, probability=0.733020, bonus=1.000000, nodes=21 <= 241.403163)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.804677, probability=0.733020, bonus=1.000000, nodes=28 <= 241.403163)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.804677, probability=0.733020, bonus=1.000000, nodes=34 <= 241.403163)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.804677, probability=0.733020, bonus=1.000000, nodes=47 <= 241.403163)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 29  List.tail(List$Element, List$Element, List$Element):List$Element (84 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=201 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.987980, probability=0.819854, bonus=1.000000, nodes=21 <= 296.394143)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.987980, probability=0.819854, bonus=1.000000, nodes=28 <= 296.394143)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.987980, probability=0.819854, bonus=1.000000, nodes=34 <= 296.394143)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.987980, probability=0.819854, bonus=1.000000, nodes=47 <= 296.394143)
                 n              @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.976105, probability=0.737869, bonus=1.000000, nodes=21 <= 292.831627)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.976105, probability=0.737869, bonus=1.000000, nodes=28 <= 292.831627)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.976105, probability=0.737869, bonus=1.000000, nodes=34 <= 292.831627)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.976105, probability=0.737869, bonus=1.000000, nodes=47 <= 292.831627)
                 n                @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.964373, probability=0.664082, bonus=1.000000, nodes=21 <= 289.311930)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.964373, probability=0.664082, bonus=1.000000, nodes=28 <= 289.311930)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.964373, probability=0.664082, bonus=1.000000, nodes=34 <= 289.311930)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.964373, probability=0.664082, bonus=1.000000, nodes=47 <= 289.311930)
                 n                  @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.952782, probability=0.597674, bonus=1.000000, nodes=21 <= 285.834539)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.952782, probability=0.597674, bonus=1.000000, nodes=28 <= 285.834539)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.952782, probability=0.597674, bonus=1.000000, nodes=34 <= 285.834539)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.952782, probability=0.597674, bonus=1.000000, nodes=47 <= 285.834539)
                 n                    @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                                @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.941330, probability=0.537906, bonus=1.000000, nodes=21 <= 282.398944)
                                              @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.941330, probability=0.537906, bonus=1.000000, nodes=28 <= 282.398944)
                                            @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.941330, probability=0.537906, bonus=1.000000, nodes=34 <= 282.398944)
                                          @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.941330, probability=0.537906, bonus=1.000000, nodes=47 <= 282.398944)
                 n                      @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                                        @ 33  List$Element.length():int (57 bytes)   not inlining it exceeds the maximum recursive inlining depth
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                                @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.908903, probability=0.519376, bonus=1.000000, nodes=21 <= 272.670818)
                                              @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.908903, probability=0.519376, bonus=1.000000, nodes=28 <= 272.670818)
                                            @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.908903, probability=0.519376, bonus=1.000000, nodes=34 <= 272.670818)
                                          @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.908903, probability=0.519376, bonus=1.000000, nodes=47 <= 272.670818)
                 n                      @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                                @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.100989, probability=0.057708, bonus=1.000000, nodes=21 <= 30.296758)
                                              @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.100989, probability=0.057708, bonus=1.000000, nodes=28 <= 30.296758)
                                            @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.100989, probability=0.057708, bonus=1.000000, nodes=34 > 30.296758)
                                          @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.100989, probability=0.057708, bonus=1.000000, nodes=12 <= 30.296758)
                 n                      @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                        @ 33  List$Element.length():int (57 bytes)   relevance-based (relevance=0.941330, probability=0.590490, bonus=1.000000, nodes=154 <= 282.398944)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.919960, probability=0.577085, bonus=1.000000, nodes=21 <= 275.988063)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.919960, probability=0.577085, bonus=1.000000, nodes=28 <= 275.988063)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.919960, probability=0.577085, bonus=1.000000, nodes=34 <= 275.988063)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.919960, probability=0.577085, bonus=1.000000, nodes=47 <= 275.988063)
                 n                    @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.102218, probability=0.064121, bonus=1.000000, nodes=21 <= 30.665340)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.102218, probability=0.064121, bonus=1.000000, nodes=28 <= 30.665340)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.102218, probability=0.064121, bonus=1.000000, nodes=34 > 30.665340)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.102218, probability=0.064121, bonus=1.000000, nodes=12 <= 30.665340)
                                      @ 33  List$Element.length():int (57 bytes)   not inlining relevance-based (relevance=0.952782, probability=0.656100, bonus=1.000000, nodes=290 > 285.834539)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.931152, probability=0.641206, bonus=1.000000, nodes=21 <= 279.345665)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.931152, probability=0.641206, bonus=1.000000, nodes=28 <= 279.345665)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.931152, probability=0.641206, bonus=1.000000, nodes=34 <= 279.345665)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.931152, probability=0.641206, bonus=1.000000, nodes=47 <= 279.345665)
                 n                  @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.103461, probability=0.071245, bonus=1.000000, nodes=21 <= 31.038407)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.103461, probability=0.071245, bonus=1.000000, nodes=28 <= 31.038407)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.103461, probability=0.071245, bonus=1.000000, nodes=34 > 31.038407)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.103461, probability=0.071245, bonus=1.000000, nodes=12 <= 31.038407)
                 n                  @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                    @ 33  List$Element.length():int (57 bytes)   relevance-based (relevance=0.964373, probability=0.729000, bonus=1.000000, nodes=154 <= 289.311930)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.942480, probability=0.712451, bonus=1.000000, nodes=21 <= 282.744114)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.942480, probability=0.712451, bonus=1.000000, nodes=28 <= 282.744114)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.942480, probability=0.712451, bonus=1.000000, nodes=34 <= 282.744114)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.942480, probability=0.712451, bonus=1.000000, nodes=47 <= 282.744114)
                 n                @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.104720, probability=0.079161, bonus=1.000000, nodes=21 <= 31.416013)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.104720, probability=0.079161, bonus=1.000000, nodes=28 <= 31.416013)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.104720, probability=0.079161, bonus=1.000000, nodes=34 > 31.416013)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.104720, probability=0.079161, bonus=1.000000, nodes=12 <= 31.416013)
                 n                @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                  @ 33  List$Element.length():int (57 bytes)   relevance-based (relevance=0.976105, probability=0.810000, bonus=1.000000, nodes=290 <= 292.831627)
                                @ 33  List$Element.length():int (57 bytes)   not inlining relevance-based (relevance=0.987980, probability=0.900000, bonus=1.000000, nodes=386 > 296.394143)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.965552, probability=0.879569, bonus=1.000000, nodes=21 <= 289.665550)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.965552, probability=0.879569, bonus=1.000000, nodes=28 <= 289.665550)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.965552, probability=0.879569, bonus=1.000000, nodes=34 <= 289.665550)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.965552, probability=0.879569, bonus=1.000000, nodes=47 <= 289.665550)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.107284, probability=0.097730, bonus=1.000000, nodes=21 <= 32.185061)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.107284, probability=0.097730, bonus=1.000000, nodes=28 <= 32.185061)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining relevance-based (relevance=0.107284, probability=0.097730, bonus=1.000000, nodes=34 > 32.185061)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.107284, probability=0.097730, bonus=1.000000, nodes=12 <= 32.185061)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 34  List$Element.length():int (57 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=154 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=21 <= 264.095461)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=28 <= 264.095461)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=34 <= 264.095461)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.880318, probability=0.801925, bonus=1.000000, nodes=47 <= 264.095461)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=21 <= 265.394595)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=28 <= 265.394595)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=34 <= 265.394595)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.884649, probability=0.805870, bonus=1.000000, nodes=47 <= 265.394595)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.977298, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.072835, probability=0.977298, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 22  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 34  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 51  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.880410, probability=0.802009, bonus=1.000000, nodes=21 <= 264.122967)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.880410, probability=0.802009, bonus=1.000000, nodes=28 <= 264.122967)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.880410, probability=0.802009, bonus=1.000000, nodes=34 <= 264.122967)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.880410, probability=0.802009, bonus=1.000000, nodes=47 <= 264.122967)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.884736, probability=0.805950, bonus=1.000000, nodes=21 <= 265.420811)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.884736, probability=0.805950, bonus=1.000000, nodes=28 <= 265.420811)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.884736, probability=0.805950, bonus=1.000000, nodes=34 <= 265.420811)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.884736, probability=0.805950, bonus=1.000000, nodes=47 <= 265.420811)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.977300, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.977300, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.977300, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.072837, probability=0.977300, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 50  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 62  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 144  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.845783, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.845783, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.845783, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.845783, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=0.990826, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                                @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=0.990826, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 53  java.lang.String.charAt(int):char (25 bytes)   relevance-based (relevance=1.171489, probability=0.990826, bonus=1.000000, nodes=16 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.847643, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.847643, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.847643, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.002199, probability=0.847643, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 49  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.902592, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.902592, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.902592, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.902592, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.968465, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.968465, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.968465, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.072983, probability=0.968465, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 101  sun.nio.fs.UnixPath.checkNotNul(String, char):void (63 bytes)   relevance-based (relevance=1.171489, probability=0.990826, bonus=1.000000, nodes=120 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=90.498778, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=90.498778, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=90.498778, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=90.498778, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.977433, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.977433, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.977433, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.155654, probability=0.977433, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=106.018349, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                                @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=106.018349, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 53  java.lang.String.charAt(int):char (25 bytes)   relevance-based (relevance=1.171489, probability=106.018349, bonus=1.000000, nodes=16 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=90.697752, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=90.697752, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=90.697752, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.002199, probability=90.697752, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 49  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=96.577327, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=96.577327, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=96.577327, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=96.577327, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=103.625797, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=103.625797, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=103.625797, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.072983, probability=103.625797, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 101  sun.nio.fs.UnixPath.checkNotNul(String, char):void (63 bytes)   relevance-based (relevance=1.171489, probability=106.018349, bonus=1.000000, nodes=120 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 50  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 62  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 144  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.956001, probability=0.870869, bonus=1.000000, nodes=21 <= 286.800373)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.956001, probability=0.870869, bonus=1.000000, nodes=28 <= 286.800373)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.956001, probability=0.870869, bonus=1.000000, nodes=34 <= 286.800373)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.956001, probability=0.870869, bonus=1.000000, nodes=47 <= 286.800373)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 20  java.lang.String.length():int (11 bytes)   trivial (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.957480, probability=0.872215, bonus=1.000000, nodes=21 <= 287.243908)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.957480, probability=0.872215, bonus=1.000000, nodes=28 <= 287.243908)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.957480, probability=0.872215, bonus=1.000000, nodes=34 <= 287.243908)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.957480, probability=0.872215, bonus=1.000000, nodes=47 <= 287.243908)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.977507, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.977507, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.977507, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.073064, probability=0.977507, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=94.053803, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=94.053803, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=94.053803, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=94.053803, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=108.000000, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                                @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=108.000000, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 53  java.lang.String.charAt(int):char (25 bytes)   relevance-based (relevance=1.148279, probability=108.000000, bonus=1.000000, nodes=16 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=94.199256, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=94.199256, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=94.199256, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.001546, probability=94.199256, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 49  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=98.382511, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=98.382511, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=98.382511, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=98.382511, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=105.570760, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=105.570760, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=105.570760, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.073064, probability=105.570760, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 101  sun.nio.fs.UnixPath.checkNotNul(String, char):void (63 bytes)   relevance-based (relevance=1.148279, probability=108.000000, bonus=1.000000, nodes=120 <= 300.000000)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                                    @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=7)
                                  @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=15 <= 99.893986)
                                @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=27 <= 99.893986)
                                  @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.332983, probability=0.249406, bonus=1.000000, nodes=8)
                                  @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.332983, probability=0.249406, bonus=1.000000, nodes=7)
                                @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=31 <= 99.893986)
                              @ 7  java.lang.AbstractStringBuilder.ensureCapacityInternal(int):void (39 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=75 <= 300.000000)
                              @ 11  java.lang.AbstractStringBuilder.isLatin1():boolean (19 bytes)   trivial (relevance=1.332977, probability=0.999998, bonus=1.000000, nodes=9)
                              @ 18  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.332977, probability=0.999998, bonus=1.000000, nodes=8)
                              @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 14  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 11  java.lang.Math.max(int, int):int (11 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.004505, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 18  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.004505, probability=1.000000, bonus=1.000000, nodes=7)
                              @ 17  java.lang.StringLatin1.indexOf(byte[], int, int, int):int (37 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=24 <= 300.000000)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998048, bonus=1.000000, nodes=5)
                              @ 6  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998048, bonus=1.000000, nodes=8)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998048, bonus=1.000000, nodes=5)
                              @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998048, bonus=1.000000, nodes=8)
                              @ 39  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991998, bonus=1.000000, nodes=5)
                              @ 47  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991998, bonus=1.000000, nodes=5)
                              @ 70  jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int):int (103 bytes)   relevance-based (relevance=1.000000, probability=0.991998, bonus=1.000000, nodes=56 <= 300.000000)
                            @ 2  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 443  java.lang.StringCoding.hasNegatives(byte[], int, int):boolean (16 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 13  java.util.Arrays.copyOfRangeByte(byte[], int, int):byte[] (38 bytes)   inline method (bytecode parsing)
                              @ 3  java.util.Arrays.checkLength(int, int):void (38 bytes)   inline method (bytecode parsing)
                                  @ 14  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000010, probability=0.509749, bonus=1.000000, nodes=8)
                                  @ 29  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.000010, probability=0.509749, bonus=1.000000, nodes=7)
                                @ 456  java.util.Arrays.copyOfRange(byte[], int, int):byte[] (25 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 12  java.lang.String.<init>(Charset, byte[], int, int):void (922 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=68 <= 300.000000)
                 n          @ 16  java.lang.Throwable.fillInStackTrace(int):Throwable (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 28  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.probe.b.expungeStaleEntries():void (1 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=3)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.700000, probability=1.000000, bonus=1.000000, nodes=8)
                                    @ 8  com.jprofiler.agent.util.a.a.a.a$b.b(Object):int (5 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=6)
                                  @ 5  com.jprofiler.agent.util.a.a.a.a.a(Object):int (12 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=12 <= 300.000000)
                                  @ 10  com.jprofiler.agent.util.a.a.b.h.c(int):int (49 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=27 <= 300.000000)
                                @ 8  com.jprofiler.agent.util.a.a.b.h.b(Object):int (14 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=40 <= 300.000000)
                                @ 14  com.jprofiler.agent.util.a.a.b.h.b(int):h$m (17 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=11 <= 300.000000)
                            @ 14  com.jprofiler.agent.util.a.a.b.h$m.o():void (9 bytes)   inline method (bytecode parsing)
                                    @ 4  java.util.concurrent.atomic.AtomicInteger.incrementAndGet():int (14 bytes)   trivial (relevance=1.013746, probability=1.000000, bonus=1.000000, nodes=9)
                            @ 1  java.util.concurrent.locks.ReentrantLock.tryLock():boolean (8 bytes)   inline method (bytecode parsing)
                            @ 22  java.util.concurrent.atomic.AtomicInteger.set(int):void (6 bytes)   inline method (bytecode parsing)
                            @ 26  java.util.concurrent.locks.ReentrantLock.unlock():void (10 bytes)   inline method (bytecode parsing)
                              @ 5  java.util.concurrent.locks.AbstractQueuedSynchronizer.release(int):boolean (19 bytes)   inline method (bytecode parsing)
                                    @ 1  com.jprofiler.agent.util.a.a.b.h$m.p():void (40 bytes)   not inlining relevance-based (relevance=0.013746, probability=0.013559, bonus=1.000000, nodes=54 > 4.123711)
                            @ 1  java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread():boolean (8 bytes)   inline method (bytecode parsing)
                                    @ 5  com.jprofiler.agent.util.a.a.b.h$m.q():void (15 bytes)   not inlining relevance-based (relevance=0.013746, probability=0.013559, bonus=1.000000, nodes=22 > 4.123711)
                                  @ 59  com.jprofiler.agent.util.a.a.b.h$m.l():void (18 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=30 <= 300.000000)
                                @ 19  com.jprofiler.agent.util.a.a.b.h$m.d(Object, int):boolean (73 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=39 <= 300.000000)
                              @ 31  com.jprofiler.agent.util.a.a.b.h.containsKey(Object):boolean (23 bytes)   relevance-based (relevance=1.700000, probability=1.000000, bonus=1.000000, nodes=84 <= 300.000000)
                            @ 6  jdk.internal.misc.Blocker.currentCarrierThread():Thread (9 bytes)   inline method (bytecode parsing)
                              @ 3  java.lang.System$2.currentCarrierThread():Thread (4 bytes)   inline method (bytecode parsing)
                              @ 0  jdk.internal.misc.VM.isBooted():boolean (13 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=10 <= 300.000000)
                              @ 14  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                @ 36  java.lang.String.encodeASCII(byte, byte[]):byte[] (151 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=20 <= 300.000000)
                              @ 21  java.lang.String.encode(Charset, byte, byte[]):byte[] (48 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=31 <= 300.000000)
                              @ 36  java.lang.String.encodeASCII(byte, byte[]):byte[] (151 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=20 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                 n            @ 16  java.lang.Throwable.fillInStackTrace(int):Throwable (0 bytes)   not inlining it is a non-intrinsic native method
              s               @ 24  java.lang.Throwable.fillInStackTrace():Throwable (29 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=19 <= 300.000000)
                            @ 13  java.io.UnixFileSystem.isInvalid(File):boolean (17 bytes)   inline method (bytecode parsing)
                              @ 1  java.io.File.getPath():String (5 bytes)   inline accessor method (bytecode parsing)
                              @ 5  java.lang.String.indexOf(int):int (7 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                                  @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                @ 14  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 11  java.lang.Math.max(int, int):int (11 bytes)   inline method (bytecode parsing)
                                  @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.004505, probability=1.000000, bonus=1.000000, nodes=5)
                                  @ 18  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.004505, probability=1.000000, bonus=1.000000, nodes=7)
                                @ 17  java.lang.StringLatin1.indexOf(byte[], int, int, int):int (37 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=17 <= 300.000000)
                              @ 3  java.lang.String.indexOf(int, int):int (37 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                            @ 21  java.lang.String.endsWith(String):boolean (15 bytes)   inline method (bytecode parsing)
                              @ 7  java.lang.String.length():int (11 bytes)   inline method (bytecode parsing)
                                @ 6  java.lang.String.coder():byte (15 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                @ 7  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                @ 14  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                                @ 28  java.lang.StringLatin1.indexOf(byte[], byte[]):int (25 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=16 <= 300.000000)
                              @ 3  java.lang.String.indexOf(String):int (64 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=25 <= 300.000000)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=5)
                              @ 3  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=8)
                                  @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998038, bonus=1.000000, nodes=5)
                                @ 6  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998038, bonus=1.000000, nodes=8)
                                  @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998038, bonus=1.000000, nodes=5)
                                @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998038, bonus=1.000000, nodes=5)
                                @ 39  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991989, bonus=1.000000, nodes=5)
                                @ 47  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991989, bonus=1.000000, nodes=5)
                                @ 70  jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int):int (103 bytes)   relevance-based (relevance=1.000000, probability=0.991989, bonus=1.000000, nodes=30 <= 300.000000)
                              @ 11  java.lang.String.startsWith(String, int):boolean (123 bytes)   relevance-based (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=62 <= 300.000000)
                            @ 1  java.lang.String.value():byte[] (5 bytes)   inline accessor method (bytecode parsing)
                              @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                            @ 4  java.lang.StringCoding.hasNegatives(byte[], int, int):boolean (16 bytes)   inline method (bytecode parsing)
                              @ 69  java.lang.String.isASCII(byte[]):boolean (16 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=11 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 40  java.io.UnixFileSystem.prefixLength(String):int (15 bytes)   inline method (bytecode parsing)
                              @ 3  java.lang.String.startsWith(String):boolean (7 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 21  java.lang.String.endsWith(String):boolean (15 bytes)   inline method (bytecode parsing)
                              @ 7  java.lang.String.length():int (11 bytes)   inline method (bytecode parsing)
                                @ 6  java.lang.String.coder():byte (15 bytes)   inline method (bytecode parsing)
                                  @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                  @ 7  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                  @ 14  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                                  @ 28  java.lang.StringLatin1.indexOf(byte[], byte[]):int (25 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=16 <= 300.000000)
                                @ 3  java.lang.String.indexOf(String):int (64 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=25 <= 300.000000)
                                  @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=5)
                                @ 3  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=8)
                                    @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998038, bonus=1.000000, nodes=5)
                                  @ 6  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998038, bonus=1.000000, nodes=8)
                                    @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998038, bonus=1.000000, nodes=5)
                                  @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998038, bonus=1.000000, nodes=5)
                                  @ 39  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991989, bonus=1.000000, nodes=5)
                                  @ 47  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991989, bonus=1.000000, nodes=5)
                                  @ 70  jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int):int (103 bytes)   relevance-based (relevance=1.000000, probability=0.991989, bonus=1.000000, nodes=30 <= 300.000000)
                                @ 11  java.lang.String.startsWith(String, int):boolean (123 bytes)   relevance-based (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=62 <= 300.000000)
                              @ 26  java.io.UnixFileSystem.normalize(String):String (41 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=97 <= 300.000000)
                                  @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=5)
                                @ 6  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.999990, bonus=1.000000, nodes=8)
                                  @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=5)
                                @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.999990, bonus=1.000000, nodes=5)
                                @ 39  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.993928, bonus=1.000000, nodes=5)
                                @ 47  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.993928, bonus=1.000000, nodes=5)
                                @ 70  jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int):int (103 bytes)   relevance-based (relevance=1.000000, probability=0.993928, bonus=1.000000, nodes=28 <= 300.000000)
                              @ 3  java.lang.String.startsWith(String, int):boolean (123 bytes)   relevance-based (relevance=1.008066, probability=0.999990, bonus=1.000000, nodes=51 <= 300.000000)
                            @ 9  java.security.AccessController.executePrivileged(PrivilegedExceptionAction, AccessControlContext, Class):Object (65 bytes)   inline method (bytecode parsing)
                            @ 18  java.security.AccessController.wrapException(Exception):PrivilegedActionException (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.security.PrivilegedActionException.<init>(Exception):void (7 bytes)   inline method (bytecode parsing)
                                @ 3  java.lang.Exception.<init>(String, Throwable):void (7 bytes)   inline method (bytecode parsing)
                            @ 27  java.nio.file.Paths.get(String, String[]):Path (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.nio.file.Path.of(String, String[]):Path (9 bytes)   inline method (bytecode parsing)
                            @ 38  java.io.FileReader.<init>(String, Charset):void (14 bytes)   inline method (bytecode parsing)
                            @ 41  java.io.BufferedReader.<init>(Reader):void (9 bytes)   inline method (bytecode parsing)
                                  @ 10  jdk.internal.platform.cgroupv2.CgroupV2SubsystemController.path():String (5 bytes)   trivial (relevance=1.000010, probability=0.999989, bonus=1.000000, nodes=5)
                                  @ 20  com.jprofiler.agent.AllocationCallee.__ejt_array_alloc(Object):void (15 bytes)   trivial (relevance=1.000010, probability=0.999989, bonus=1.000000, nodes=8)
                                    @ 0  jdk.internal.misc.VM.isModuleSystemInited():boolean (13 bytes)   relevance-based (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=10 <= 300.000000)
                                  @ 0  java.nio.file.FileSystems.getDefault():FileSystem (14 bytes)   relevance-based (relevance=1.000010, probability=0.999989, bonus=1.000000, nodes=11 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 53  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 56  java.lang.StringBuilder.<init>():void (7 bytes)   inline method (bytecode parsing)
                            @ 65  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 79  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 82  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 91  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 128  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 140  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 154  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 157  java.lang.StringBuilder.length():int (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.AbstractStringBuilder.length():int (5 bytes)   inline accessor method (bytecode parsing)
                            @ 166  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 182  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 185  java.lang.StringBuilder.append(char):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 194  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 208  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 211  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 220  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 238  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 241  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 250  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 266  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 278  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 287  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                                  @ 5  sun.nio.fs.UnixFileSystem.getPath(String, String[]):Path (301 bytes)   not inlining relevance-based (relevance=1.000010, probability=0.999989, bonus=1.000000, nodes=442 > 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 46  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910939, bonus=1.000000, nodes=21 <= 300.000000)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910939, bonus=1.000000, nodes=28 <= 300.000000)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910939, bonus=1.000000, nodes=34 <= 300.000000)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910939, bonus=1.000000, nodes=47 <= 300.000000)
                 n                @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 27  java.lang.String.<init>(byte[], Charset):void (16 bytes)   inline method (bytecode parsing)
                              @ 2  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 36  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 45  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910939, bonus=1.000000, nodes=21 <= 300.000000)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910939, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910939, bonus=1.000000, nodes=34 <= 300.000000)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910939, bonus=1.000000, nodes=47 <= 300.000000)
                 n                  @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921533, bonus=1.000000, nodes=21 <= 300.000000)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921533, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921533, bonus=1.000000, nodes=34 <= 300.000000)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.011629, probability=0.921533, bonus=1.000000, nodes=47 <= 300.000000)
                 n                  @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                        @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=8)
                                        @ 443  java.lang.StringCoding.hasNegatives(byte[], int, int):boolean (16 bytes)   relevance-based (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 13  java.util.Arrays.copyOfRangeByte(byte[], int, int):byte[] (38 bytes)   inline method (bytecode parsing)
                              @ 3  java.util.Arrays.checkLength(int, int):void (38 bytes)   inline method (bytecode parsing)
                                          @ 14  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000010, probability=0.509743, bonus=1.000000, nodes=8)
                                          @ 29  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.000010, probability=0.509743, bonus=1.000000, nodes=7)
                                        @ 456  java.util.Arrays.copyOfRange(byte[], int, int):byte[] (25 bytes)   relevance-based (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=34 <= 300.000000)
                                      @ 12  java.lang.String.<init>(Charset, byte[], int, int):void (922 bytes)   relevance-based (relevance=1.097756, probability=0.999989, bonus=1.000000, nodes=59 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921790, bonus=1.000000, nodes=21 <= 300.000000)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921790, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921790, bonus=1.000000, nodes=34 <= 300.000000)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.011912, probability=0.921790, bonus=1.000000, nodes=47 <= 300.000000)
                 n                  @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981189, bonus=1.000000, nodes=21 <= 300.000000)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981189, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981189, bonus=1.000000, nodes=34 <= 300.000000)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077118, probability=0.981189, bonus=1.000000, nodes=47 <= 300.000000)
                 n                  @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                    @ 28  sun.nio.fs.Util.toString(byte[]):String (59 bytes)   relevance-based (relevance=1.097756, probability=0.999989, bonus=1.000000, nodes=278 <= 300.000000)
                                  @ 30  sun.nio.fs.UnixPath.toString():String (60 bytes)   not inlining relevance-based (relevance=1.000010, probability=0.999989, bonus=1.000000, nodes=361 > 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 40  java.io.UnixFileSystem.prefixLength(String):int (15 bytes)   inline method (bytecode parsing)
                              @ 3  java.lang.String.startsWith(String):boolean (7 bytes)   inline method (bytecode parsing)
                                      @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=8)
                            @ 21  java.lang.String.endsWith(String):boolean (15 bytes)   inline method (bytecode parsing)
                              @ 7  java.lang.String.length():int (11 bytes)   inline method (bytecode parsing)
                                @ 6  java.lang.String.coder():byte (15 bytes)   inline method (bytecode parsing)
                                          @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=5)
                                          @ 7  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=5)
                                          @ 14  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=9)
                                          @ 28  java.lang.StringLatin1.indexOf(byte[], byte[]):int (25 bytes)   relevance-based (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=16 <= 300.000000)
                                        @ 3  java.lang.String.indexOf(String):int (64 bytes)   relevance-based (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=25 <= 300.000000)
                                          @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=5)
                                        @ 3  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=8)
                                            @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998027, bonus=1.000000, nodes=5)
                                          @ 6  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998027, bonus=1.000000, nodes=8)
                                            @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998027, bonus=1.000000, nodes=5)
                                          @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998027, bonus=1.000000, nodes=5)
                                          @ 39  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991978, bonus=1.000000, nodes=5)
                                          @ 47  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991978, bonus=1.000000, nodes=5)
                                          @ 70  jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int):int (103 bytes)   relevance-based (relevance=1.000000, probability=0.991978, bonus=1.000000, nodes=30 <= 300.000000)
                                        @ 11  java.lang.String.startsWith(String, int):boolean (123 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=62 <= 300.000000)
                                      @ 26  java.io.UnixFileSystem.normalize(String):String (41 bytes)   relevance-based (relevance=1.000000, probability=0.999989, bonus=1.000000, nodes=97 <= 300.000000)
                                          @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=5)
                                        @ 6  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.999979, bonus=1.000000, nodes=8)
                                          @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=5)
                                        @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.999979, bonus=1.000000, nodes=5)
                                        @ 39  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.993917, bonus=1.000000, nodes=5)
                                        @ 47  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.993917, bonus=1.000000, nodes=5)
                                        @ 70  jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int):int (103 bytes)   relevance-based (relevance=1.000000, probability=0.993917, bonus=1.000000, nodes=28 <= 300.000000)
                                      @ 3  java.lang.String.startsWith(String, int):boolean (123 bytes)   relevance-based (relevance=1.008066, probability=0.999979, bonus=1.000000, nodes=51 <= 300.000000)
                                    @ 10  java.io.File.<init>(String):void (47 bytes)   relevance-based (relevance=1.000010, probability=0.999989, bonus=1.000000, nodes=166 <= 300.000000)
                            @ 1  java.io.InputStream.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 9  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 20  java.io.File.getPath():String (5 bytes)   inline accessor method (bytecode parsing)
                                      @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000010, probability=0.999979, bonus=1.000000, nodes=8)
                                      @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000010, probability=0.999979, bonus=1.000000, nodes=8)
                                        @ 0  java.lang.System.allowSecurityManager():boolean (13 bytes)   trivial (relevance=1.001763, probability=0.999979, bonus=1.000000, nodes=8)
                                      @ 28  java.lang.System.getSecurityManager():SecurityManager (12 bytes)   relevance-based (relevance=1.000010, probability=0.999979, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 13  java.io.UnixFileSystem.isInvalid(File):boolean (17 bytes)   inline method (bytecode parsing)
                              @ 1  java.io.File.getPath():String (5 bytes)   inline accessor method (bytecode parsing)
                              @ 5  java.lang.String.indexOf(int):int (7 bytes)   inline method (bytecode parsing)
                                          @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=9)
                                            @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=5)
                                          @ 14  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=8)
                            @ 11  java.lang.Math.max(int, int):int (11 bytes)   inline method (bytecode parsing)
                                            @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.004505, probability=0.999979, bonus=1.000000, nodes=5)
                                            @ 18  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.004505, probability=0.999979, bonus=1.000000, nodes=7)
                                          @ 17  java.lang.StringLatin1.indexOf(byte[], int, int, int):int (37 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=17 <= 300.000000)
                                        @ 3  java.lang.String.indexOf(int, int):int (37 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=28 <= 300.000000)
                                      @ 54  java.io.File.isInvalid():boolean (47 bytes)   relevance-based (relevance=1.001763, probability=0.999979, bonus=1.000000, nodes=43 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                        @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=8)
                                      @ 75  java.io.FileDescriptor.<init>():void (17 bytes)   relevance-based (relevance=1.001763, probability=0.999979, bonus=1.000000, nodes=14 <= 300.000000)
              s                       @ 86  java.io.FileDescriptor.attach(Closeable):void (73 bytes)   relevance-based (relevance=1.001763, probability=0.999979, bonus=1.000000, nodes=15 <= 300.000000)
                            @ 6  jdk.internal.misc.Blocker.currentCarrierThread():Thread (9 bytes)   inline method (bytecode parsing)
                              @ 3  java.lang.System$2.currentCarrierThread():Thread (4 bytes)   inline method (bytecode parsing)
                                          @ 0  jdk.internal.misc.VM.isBooted():boolean (13 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=10 <= 300.000000)
                                        @ 1  jdk.internal.misc.Blocker.begin():long (97 bytes)   relevance-based (relevance=1.000010, probability=0.999979, bonus=1.000000, nodes=20 <= 300.000000)
                 n                    @ 7  java.io.FileInputStream.open0(String):void (0 bytes)   not inlining it is a non-intrinsic native method
                                        @ 20  jdk.internal.misc.Blocker.end(long):void (71 bytes)   trivial (relevance=0.000010, probability=0.000010, bonus=1.000000, nodes=4)
                                        @ 11  jdk.internal.misc.Blocker.end(long):void (71 bytes)   trivial (relevance=1.000000, probability=0.999969, bonus=1.000000, nodes=4)
                            @ 13  com.jprofiler.agent.probe.a.g.c(Object, String):void (8 bytes)   inline method (bytecode parsing)
                            @ 4  com.jprofiler.agent.probe.g.d.isRecording():boolean (8 bytes)   inline method (bytecode parsing)
                              @ 4  com.jprofiler.agent.probe.g.c.d():boolean (5 bytes)   inline accessor method (bytecode parsing)
                                            @ 14  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining no type profile exists
                                            @ 1  com.jprofiler.agent.probe.a.g.l():g$b (32 bytes)   relevance-based (relevance=2.000000, probability=0.499985, bonus=1.000000, nodes=26 <= 300.000000)
                                          @ 4  com.jprofiler.agent.probe.a.g.a(Object, String, int):void (21 bytes)   relevance-based (relevance=1.000000, probability=0.499985, bonus=1.000000, nodes=29 <= 300.000000)
                                        @ 29  com.jprofiler.agent.callee.PM10Callee.__ejt_i_exit_openFis(Object, Object):void (25 bytes)   relevance-based (relevance=1.000000, probability=0.999969, bonus=1.000000, nodes=38 <= 300.000000)
                                      @ 96  java.io.FileInputStream.open(String):void (33 bytes)   relevance-based (relevance=1.001763, probability=0.999979, bonus=1.000000, nodes=67 <= 300.000000)
                            @ 15  java.io.FileDescriptor$1.get(FileDescriptor):int (5 bytes)   inline method (bytecode parsing)
                            @ 25  java.io.FileDescriptor$1.getHandle(FileDescriptor):long (5 bytes)   inline method (bytecode parsing)
                            @ 37  jdk.internal.ref.CleanerFactory.cleaner():Cleaner (4 bytes)   inline method (bytecode parsing)
                            @ 42  java.io.FileCleanable.<init>(FileDescriptor, Cleaner, int, long):void (18 bytes)   inline method (bytecode parsing)
                                        @ 5  java.io.FileDescriptor.valid():boolean (25 bytes)   relevance-based (relevance=1.502630, probability=0.374988, bonus=1.000000, nodes=21 <= 300.000000)
                            @ 2  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 12  java.lang.ref.PhantomReference.<init>(Object, ReferenceQueue):void (7 bytes)   inline method (bytecode parsing)
                                          @ 4  java.util.function.Function.apply(Object):Object (0 bytes)   not inlining no type profile exists
                                          @ 6  jdk.internal.ref.CleanerImpl.getCleanerImpl(Cleaner):CleanerImpl (13 bytes)   relevance-based (relevance=0.751315, probability=0.187494, bonus=1.000000, nodes=11 <= 225.394494)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                            @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.502630, probability=0.187494, bonus=1.000000, nodes=8)
                                          @ 3  java.lang.ref.Reference.<init>(Object, ReferenceQueue):void (25 bytes)   relevance-based (relevance=0.751315, probability=0.187494, bonus=1.000000, nodes=24 <= 225.394494)
                                          @ 4  java.util.function.Function.apply(Object):Object (0 bytes)   not inlining no type profile exists
                                          @ 27  jdk.internal.ref.CleanerImpl.getCleanerImpl(Cleaner):CleanerImpl (13 bytes)   relevance-based (relevance=1.502630, probability=0.187494, bonus=1.000000, nodes=11 <= 300.000000)
                                          @ 37  jdk.internal.ref.PhantomCleanable.insert():void (53 bytes)   relevance-based (relevance=1.502630, probability=0.187494, bonus=1.000000, nodes=21 <= 300.000000)
                                        @ 3  jdk.internal.ref.PhantomCleanable.<init>(Object, Cleaner):void (49 bytes)   relevance-based (relevance=0.751315, probability=0.187494, bonus=1.000000, nodes=71 <= 225.394494)
                            @ 3  java.util.Objects.requireNonNull(Object, String):Object (15 bytes)   inline method (bytecode parsing)
                              @ 9  java.lang.NullPointerException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                  @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                        @ 18  jdk.internal.ref.PhantomCleanable.clear():void (12 bytes)   not inlining no type profile exists
              s                         @ 45  java.io.FileDescriptor.registerCleanup(PhantomCleanable):void (27 bytes)   relevance-based (relevance=0.751315, probability=0.187494, bonus=1.000000, nodes=24 <= 225.394494)
                                      @ 103  java.io.FileCleanable.register(FileDescriptor):void (49 bytes)   relevance-based (relevance=0.751315, probability=0.749977, bonus=1.000000, nodes=133 <= 225.394494)
                                    @ 17  java.io.FileInputStream.<init>(File):void (107 bytes)   relevance-based (relevance=1.008066, probability=0.999979, bonus=1.000000, nodes=292 <= 300.000000)
                                  @ 6  java.io.FileInputStream.<init>(String):void (21 bytes)   not inlining relevance-based (relevance=1.000010, probability=0.999989, bonus=1.000000, nodes=453 > 300.000000)
                            @ 15  java.lang.NullPointerException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 17  java.lang.NullPointerException.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.RuntimeException.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.Exception.<init>():void (5 bytes)   inline method (bytecode parsing)
                                      @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=8)
                                    @ 2  java.io.Reader.<init>(Object):void (27 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                          @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=8)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 9  java.util.concurrent.locks.ReentrantLock$NonfairSync.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.util.concurrent.locks.ReentrantLock$Sync.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>():void (5 bytes)   inline method (bytecode parsing)
                                  @ 1  java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>():void (5 bytes)   inline method (bytecode parsing)
                                    @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                            @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=8)
                                            @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=8)
                                          @ 9  java.util.concurrent.locks.ReentrantLock.<init>():void (16 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=15 <= 300.000000)
                                        @ 10  jdk.internal.misc.InternalLock.<init>():void (16 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=23 <= 300.000000)
                                      @ 18  jdk.internal.misc.InternalLock.newLockOr(Object):Object (18 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=25 <= 300.000000)
                                    @ 22  java.io.InputStreamReader.lockFor(InputStreamReader):Object (24 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=26 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 23  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 35  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 44  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910930, bonus=1.000000, nodes=21 <= 300.000000)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910930, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910930, bonus=1.000000, nodes=34 <= 300.000000)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910930, bonus=1.000000, nodes=47 <= 300.000000)
                 n                  @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=21 <= 300.000000)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=34 <= 300.000000)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.097756, probability=0.999979, bonus=1.000000, nodes=47 <= 300.000000)
                 n                  @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 11  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 23  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 35  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 47  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 71  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 80  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 92  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921523, bonus=1.000000, nodes=21 <= 300.000000)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921523, bonus=1.000000, nodes=28 <= 300.000000)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921523, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.921523, bonus=1.000000, nodes=47 <= 300.000000)
                 n                    @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 11  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 14  java.nio.charset.CharsetDecoder.<init>(Charset, float, float):void (10 bytes)   inline method (bytecode parsing)
                            @ 23  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                                  @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921523, bonus=1.000000, nodes=21 <= 300.000000)
                                                @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921523, bonus=1.000000, nodes=28 <= 300.000000)
                                              @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921523, bonus=1.000000, nodes=34 <= 300.000000)
                                            @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.921523, bonus=1.000000, nodes=47 <= 300.000000)
                 n                        @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 40  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 56  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 72  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=8)
                            @ 10  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 29  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 49  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 63  java.nio.charset.CharsetDecoder.implReplaceWith(String):void (1 bytes)   inline method (bytecode parsing)
                                                  @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=5)
                                                @ 15  java.lang.String.length():int (11 bytes)   trivial (relevance=4.000000, probability=0.999979, bonus=1.000000, nodes=5)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                                @ 2  java.lang.Throwable.<init>(String):void (34 bytes)   not inlining too large previous low-level graph (low-level-nodes: 618, relevance=1.000000, probability=0.249995, bonus=1.000000, nodes=22)
                                              @ 95  java.nio.charset.CharsetDecoder.replaceWith(String):CharsetDecoder (68 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=22 <= 300.000000)
                                            @ 6  java.nio.charset.CharsetDecoder.<init>(Charset, float, float, String):void (100 bytes)   relevance-based (relevance=1.085137, probability=0.999979, bonus=1.000000, nodes=44 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                                  @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.500142, probability=0.460893, bonus=1.000000, nodes=21 <= 150.042644)
                                                @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.500142, probability=0.460893, bonus=1.000000, nodes=28 <= 150.042644)
                                              @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.500142, probability=0.460893, bonus=1.000000, nodes=34 <= 150.042644)
                                            @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.500142, probability=0.460893, bonus=1.000000, nodes=47 <= 150.042644)
                 n                        @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                          @ 5  sun.nio.cs.UTF_8$Decoder.<init>(Charset):void (27 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=158 <= 300.000000)
                                        @ 14  sun.nio.cs.UTF_8.newDecoder():CharsetDecoder (9 bytes)   relevance-based (relevance=1.085137, probability=0.999979, bonus=1.000000, nodes=159 <= 300.000000)
                                      @ 26  sun.nio.cs.StreamDecoder.<init>(InputStream, Object, Charset):void (96 bytes)   not inlining relevance-based (relevance=1.097756, probability=0.999979, bonus=1.000000, nodes=356 > 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981184, bonus=1.000000, nodes=21 <= 300.000000)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981184, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981184, bonus=1.000000, nodes=34 <= 300.000000)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077124, probability=0.981184, bonus=1.000000, nodes=47 <= 300.000000)
                 n                  @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981184, bonus=1.000000, nodes=21 <= 300.000000)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981184, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981184, bonus=1.000000, nodes=34 <= 300.000000)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077124, probability=0.981184, bonus=1.000000, nodes=47 <= 300.000000)
                 n                  @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                    @ 26  sun.nio.cs.StreamDecoder.forInputStreamReader(InputStream, Object, Charset):StreamDecoder (58 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=222 <= 300.000000)
                                  @ 10  java.io.InputStreamReader.<init>(InputStream, Charset):void (33 bytes)   relevance-based (relevance=1.000000, probability=0.999979, bonus=1.000000, nodes=257 <= 300.000000)
                                @ 8  jdk.internal.platform.CgroupUtil.lambda$readStringValue$0(CgroupSubsystemController, String):BufferedReader (45 bytes)   not inlining relevance-based (relevance=1.000010, probability=0.999989, bonus=1.000000, nodes=305 > 300.000000)
                              @ 29  jdk.internal.platform.CgroupUtil$$Lambda/0x000000080012a020.run():Object (12 bytes)   relevance-based (relevance=1.000010, probability=0.999989, bonus=1.000000, nodes=13 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 3  java.lang.Throwable.<init>(String, Throwable):void (39 bytes)   not inlining relevance-based (relevance=0.000003, probability=0.000003, bonus=1.000000, nodes=25 > 0.000825)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 50  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 62  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 144  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                              @ 5  sun.nio.fs.UnixPath.normalizeAndCheck(String):String (158 bytes)   not inlining too large previous low-level graph (low-level-nodes: 1082, relevance=1.019148, probability=1.000000, bonus=1.000000, nodes=162)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 32  java.lang.System$2.getBytesNoRepl(String, Charset):byte[] (6 bytes)   inline method (bytecode parsing)
                            @ 43  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 52  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981212, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981212, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981212, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077131, probability=0.981212, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 12  sun.nio.fs.UnixFileSystem.normalizeNativePath(String):String (31 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=117 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 19  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981212, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981212, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981212, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077131, probability=0.981212, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 20  sun.nio.fs.Util.jnuEncoding():Charset (33 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=117 <= 300.000000)
                              @ 8  sun.nio.fs.UnixPath.encode(UnixFileSystem, String):byte[] (105 bytes)   not inlining relevance-based (relevance=1.019148, probability=1.000000, bonus=1.000000, nodes=344 > 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.019148, probability=1.000000, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 20  sun.nio.fs.UnixPath.<init>(UnixFileSystem, byte[]):void (15 bytes)   relevance-based (relevance=1.019148, probability=1.000000, bonus=1.000000, nodes=15 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981212, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981212, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981212, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.981212, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 53  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 56  java.lang.StringBuilder.<init>():void (7 bytes)   inline method (bytecode parsing)
                            @ 65  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 79  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 82  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 91  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 128  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 140  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 154  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 157  java.lang.StringBuilder.length():int (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.AbstractStringBuilder.length():int (5 bytes)   inline accessor method (bytecode parsing)
                            @ 166  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 182  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 185  java.lang.StringBuilder.append(char):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 194  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 208  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 211  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 220  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 238  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 241  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 250  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 266  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 278  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 287  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.011723, probability=0.921628, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.012015, probability=0.921894, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.011723, probability=0.921628, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 16  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 3  java.lang.AbstractStringBuilder.<init>(int):void (44 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=17 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.012015, probability=0.921894, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.011723, probability=0.921628, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 2  java.lang.AbstractStringBuilder.append(String):AbstractStringBuilder (45 bytes)   not inlining too large previous low-level graph (low-level-nodes: 331, relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=23)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.012015, probability=0.921894, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.011723, probability=0.921628, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 5  java.lang.AbstractStringBuilder.getValue():byte[] (5 bytes)   inline accessor method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 1  java.lang.AbstractStringBuilder.length():int (5 bytes)   inline accessor method (bytecode parsing)
                                @ 10  java.lang.StringBuilder.length():int (5 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                @ 16  java.lang.AbstractStringBuilder.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                            @ 13  java.util.Arrays.copyOfRangeByte(byte[], int, int):byte[] (38 bytes)   inline method (bytecode parsing)
                              @ 3  java.util.Arrays.checkLength(int, int):void (38 bytes)   inline method (bytecode parsing)
                                  @ 14  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000010, probability=0.509749, bonus=1.000000, nodes=8)
                                  @ 29  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.000010, probability=0.509749, bonus=1.000000, nodes=7)
                                @ 32  java.util.Arrays.copyOfRange(byte[], int, int):byte[] (25 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=36 <= 300.000000)
                              @ 3  java.lang.String.<init>(AbstractStringBuilder, Void):void (99 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=54 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.012015, probability=0.921894, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 131  java.lang.String.isEmpty():boolean (14 bytes)   relevance-based (relevance=1.085037, probability=1.000000, bonus=1.000000, nodes=10 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000289, probability=0.921894, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 17  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                              @ 269  sun.nio.fs.UnixPath.<init>(UnixFileSystem, String):void (33 bytes)   not inlining too large previous low-level graph (low-level-nodes: 379, relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=50)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981218, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981218, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981218, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077138, probability=0.981218, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981218, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981218, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981218, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077138, probability=0.981218, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000289, probability=0.921894, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                      @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=7)
                                    @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=15 <= 99.893986)
                                  @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=27 <= 99.893986)
                                    @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.332983, probability=0.249406, bonus=1.000000, nodes=8)
                                    @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.332983, probability=0.249406, bonus=1.000000, nodes=7)
                                  @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.332980, probability=0.249801, bonus=1.000000, nodes=31 <= 99.893986)
                                @ 7  java.lang.AbstractStringBuilder.ensureCapacityInternal(int):void (39 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=75 <= 300.000000)
                                @ 11  java.lang.AbstractStringBuilder.isLatin1():boolean (19 bytes)   trivial (relevance=1.332977, probability=0.999998, bonus=1.000000, nodes=9)
                                @ 18  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.332977, probability=0.999998, bonus=1.000000, nodes=5)
                              @ 2  java.lang.AbstractStringBuilder.append(char):AbstractStringBuilder (77 bytes)   relevance-based (relevance=1.085037, probability=1.000000, bonus=1.000000, nodes=88 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000289, probability=0.921894, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.921628, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 2  java.lang.AbstractStringBuilder.append(String):AbstractStringBuilder (45 bytes)   not inlining too large previous low-level graph (low-level-nodes: 331, relevance=1.085037, probability=1.000000, bonus=1.000000, nodes=23)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921894, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000289, probability=0.921894, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.invoke.Invokers$Holder.linkToTargetMethod(Object, Object, Object):Object (10 bytes)   inline method (bytecode parsing)
                              @ 6  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(Object, Object, Object):Object (24 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.invoke.DirectMethodHandle.allocateInstance(Object):Object (16 bytes)   inline method (bytecode parsing)
                                @ 6  java.lang.invoke.DirectMethodHandle.constructorMethod(Object):Object (10 bytes)   inline method (bytecode parsing)
                            @ 17  java.io.BufferedReader.readLine():String (7 bytes)   inline method (bytecode parsing)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 19  jdk.internal.platform.CgroupUtil$$Lambda/0x000000080012a020.<init>(CgroupSubsystemController, String):void (15 bytes)   relevance-based (relevance=2.000020, probability=1.000000, bonus=1.000000, nodes=15 <= 300.000000)
                            @ 9  java.security.AccessController.executePrivileged(PrivilegedExceptionAction, AccessControlContext, Class):Object (65 bytes)   inline method (bytecode parsing)
                            @ 18  java.security.AccessController.wrapException(Exception):PrivilegedActionException (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.security.PrivilegedActionException.<init>(Exception):void (7 bytes)   inline method (bytecode parsing)
                                @ 3  java.lang.Exception.<init>(String, Throwable):void (7 bytes)   inline method (bytecode parsing)
                            @ 27  java.nio.file.Paths.get(String, String[]):Path (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.nio.file.Path.of(String, String[]):Path (9 bytes)   inline method (bytecode parsing)
                            @ 38  java.io.FileReader.<init>(String, Charset):void (14 bytes)   inline method (bytecode parsing)
                            @ 41  java.io.BufferedReader.<init>(Reader):void (9 bytes)   inline method (bytecode parsing)
                                    @ 10  jdk.internal.platform.cgroupv2.CgroupV2SubsystemController.path():String (5 bytes)   trivial (relevance=1.000010, probability=0.999990, bonus=1.000000, nodes=5)
                                    @ 20  com.jprofiler.agent.AllocationCallee.__ejt_array_alloc(Object):void (15 bytes)   trivial (relevance=1.000010, probability=0.999990, bonus=1.000000, nodes=8)
                                      @ 0  jdk.internal.misc.VM.isModuleSystemInited():boolean (13 bytes)   relevance-based (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=10 <= 300.000000)
                                    @ 0  java.nio.file.FileSystems.getDefault():FileSystem (14 bytes)   relevance-based (relevance=1.000010, probability=0.999990, bonus=1.000000, nodes=11 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 53  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 56  java.lang.StringBuilder.<init>():void (7 bytes)   inline method (bytecode parsing)
                            @ 65  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 79  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 82  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 91  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 128  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 140  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 154  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 157  java.lang.StringBuilder.length():int (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.AbstractStringBuilder.length():int (5 bytes)   inline accessor method (bytecode parsing)
                            @ 166  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 182  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 185  java.lang.StringBuilder.append(char):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 194  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 208  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 211  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 220  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 238  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 241  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 250  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 266  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 278  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 287  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                                    @ 5  sun.nio.fs.UnixFileSystem.getPath(String, String[]):Path (301 bytes)   not inlining too large previous low-level graph (low-level-nodes: 3302, relevance=1.000010, probability=0.999990, bonus=1.000000, nodes=442)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 46  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                            @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910940, bonus=1.000000, nodes=21 <= 300.000000)
                                          @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910940, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910940, bonus=1.000000, nodes=34 <= 300.000000)
                                      @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910940, bonus=1.000000, nodes=47 <= 300.000000)
                 n                  @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 27  java.lang.String.<init>(byte[], Charset):void (16 bytes)   inline method (bytecode parsing)
                              @ 2  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 36  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 45  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910940, bonus=1.000000, nodes=21 <= 300.000000)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910940, bonus=1.000000, nodes=28 <= 300.000000)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910940, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910940, bonus=1.000000, nodes=47 <= 300.000000)
                 n                    @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921664, bonus=1.000000, nodes=21 <= 300.000000)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921664, bonus=1.000000, nodes=28 <= 300.000000)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921664, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.011773, probability=0.921664, bonus=1.000000, nodes=47 <= 300.000000)
                 n                    @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                          @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=8)
                                          @ 443  java.lang.StringCoding.hasNegatives(byte[], int, int):boolean (16 bytes)   relevance-based (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 13  java.util.Arrays.copyOfRangeByte(byte[], int, int):byte[] (38 bytes)   inline method (bytecode parsing)
                              @ 3  java.util.Arrays.checkLength(int, int):void (38 bytes)   inline method (bytecode parsing)
                                            @ 14  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000010, probability=0.509994, bonus=1.000000, nodes=8)
                                            @ 29  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.000010, probability=0.509994, bonus=1.000000, nodes=7)
                                          @ 456  java.util.Arrays.copyOfRange(byte[], int, int):byte[] (25 bytes)   relevance-based (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 12  java.lang.String.<init>(Charset, byte[], int, int):void (922 bytes)   relevance-based (relevance=1.097756, probability=0.999990, bonus=1.000000, nodes=59 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921920, bonus=1.000000, nodes=21 <= 300.000000)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921920, bonus=1.000000, nodes=28 <= 300.000000)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921920, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.012053, probability=0.921920, bonus=1.000000, nodes=47 <= 300.000000)
                 n                    @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981203, bonus=1.000000, nodes=21 <= 300.000000)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981203, bonus=1.000000, nodes=28 <= 300.000000)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981203, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077132, probability=0.981203, bonus=1.000000, nodes=47 <= 300.000000)
                 n                    @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                      @ 28  sun.nio.fs.Util.toString(byte[]):String (59 bytes)   relevance-based (relevance=1.097756, probability=0.999990, bonus=1.000000, nodes=278 <= 300.000000)
                                    @ 30  sun.nio.fs.UnixPath.toString():String (60 bytes)   not inlining relevance-based (relevance=1.000010, probability=0.999990, bonus=1.000000, nodes=361 > 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 40  java.io.UnixFileSystem.prefixLength(String):int (15 bytes)   inline method (bytecode parsing)
                              @ 3  java.lang.String.startsWith(String):boolean (7 bytes)   inline method (bytecode parsing)
                                        @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=8)
                            @ 21  java.lang.String.endsWith(String):boolean (15 bytes)   inline method (bytecode parsing)
                              @ 7  java.lang.String.length():int (11 bytes)   inline method (bytecode parsing)
                                @ 6  java.lang.String.coder():byte (15 bytes)   inline method (bytecode parsing)
                                            @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=5)
                                            @ 7  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=5)
                                            @ 14  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=9)
                                            @ 28  java.lang.StringLatin1.indexOf(byte[], byte[]):int (25 bytes)   relevance-based (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=16 <= 300.000000)
                                          @ 3  java.lang.String.indexOf(String):int (64 bytes)   relevance-based (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=25 <= 300.000000)
                                            @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=5)
                                          @ 3  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                                              @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998028, bonus=1.000000, nodes=5)
                                            @ 6  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998028, bonus=1.000000, nodes=8)
                                              @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998028, bonus=1.000000, nodes=5)
                                            @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998028, bonus=1.000000, nodes=5)
                                            @ 39  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991979, bonus=1.000000, nodes=5)
                                            @ 47  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991979, bonus=1.000000, nodes=5)
                                            @ 70  jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int):int (103 bytes)   relevance-based (relevance=1.000000, probability=0.991979, bonus=1.000000, nodes=30 <= 300.000000)
                                          @ 11  java.lang.String.startsWith(String, int):boolean (123 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=62 <= 300.000000)
                                        @ 26  java.io.UnixFileSystem.normalize(String):String (41 bytes)   relevance-based (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=97 <= 300.000000)
                                            @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=5)
                                          @ 6  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.999980, bonus=1.000000, nodes=8)
                                            @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=5)
                                          @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.999980, bonus=1.000000, nodes=5)
                                          @ 39  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.993918, bonus=1.000000, nodes=5)
                                          @ 47  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.993918, bonus=1.000000, nodes=5)
                                          @ 70  jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int):int (103 bytes)   relevance-based (relevance=1.000000, probability=0.993918, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 3  java.lang.String.startsWith(String, int):boolean (123 bytes)   relevance-based (relevance=1.008066, probability=0.999980, bonus=1.000000, nodes=51 <= 300.000000)
                                      @ 10  java.io.File.<init>(String):void (47 bytes)   relevance-based (relevance=1.000010, probability=0.999990, bonus=1.000000, nodes=166 <= 300.000000)
                            @ 1  java.io.InputStream.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 9  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 20  java.io.File.getPath():String (5 bytes)   inline accessor method (bytecode parsing)
                                        @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000010, probability=0.999980, bonus=1.000000, nodes=8)
                                        @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000010, probability=0.999980, bonus=1.000000, nodes=8)
                                          @ 0  java.lang.System.allowSecurityManager():boolean (13 bytes)   trivial (relevance=1.001756, probability=0.999980, bonus=1.000000, nodes=8)
                                        @ 28  java.lang.System.getSecurityManager():SecurityManager (12 bytes)   relevance-based (relevance=1.000010, probability=0.999980, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 13  java.io.UnixFileSystem.isInvalid(File):boolean (17 bytes)   inline method (bytecode parsing)
                              @ 1  java.io.File.getPath():String (5 bytes)   inline accessor method (bytecode parsing)
                              @ 5  java.lang.String.indexOf(int):int (7 bytes)   inline method (bytecode parsing)
                                            @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=9)
                                              @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=5)
                                            @ 14  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                            @ 11  java.lang.Math.max(int, int):int (11 bytes)   inline method (bytecode parsing)
                                              @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.004505, probability=0.999980, bonus=1.000000, nodes=5)
                                              @ 18  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.004505, probability=0.999980, bonus=1.000000, nodes=7)
                                            @ 17  java.lang.StringLatin1.indexOf(byte[], int, int, int):int (37 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=17 <= 300.000000)
                                          @ 3  java.lang.String.indexOf(int, int):int (37 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=28 <= 300.000000)
                                        @ 54  java.io.File.isInvalid():boolean (47 bytes)   relevance-based (relevance=1.001756, probability=0.999980, bonus=1.000000, nodes=43 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                          @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                                        @ 75  java.io.FileDescriptor.<init>():void (17 bytes)   relevance-based (relevance=1.001756, probability=0.999980, bonus=1.000000, nodes=14 <= 300.000000)
              s                         @ 86  java.io.FileDescriptor.attach(Closeable):void (73 bytes)   relevance-based (relevance=1.001756, probability=0.999980, bonus=1.000000, nodes=15 <= 300.000000)
                            @ 6  jdk.internal.misc.Blocker.currentCarrierThread():Thread (9 bytes)   inline method (bytecode parsing)
                              @ 3  java.lang.System$2.currentCarrierThread():Thread (4 bytes)   inline method (bytecode parsing)
                                            @ 0  jdk.internal.misc.VM.isBooted():boolean (13 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=10 <= 300.000000)
                                          @ 1  jdk.internal.misc.Blocker.begin():long (97 bytes)   relevance-based (relevance=1.000010, probability=0.999980, bonus=1.000000, nodes=20 <= 300.000000)
                 n                      @ 7  java.io.FileInputStream.open0(String):void (0 bytes)   not inlining it is a non-intrinsic native method
                                          @ 20  jdk.internal.misc.Blocker.end(long):void (71 bytes)   trivial (relevance=0.000010, probability=0.000010, bonus=1.000000, nodes=4)
                                          @ 11  jdk.internal.misc.Blocker.end(long):void (71 bytes)   trivial (relevance=1.000000, probability=0.999970, bonus=1.000000, nodes=4)
                            @ 13  com.jprofiler.agent.probe.a.g.c(Object, String):void (8 bytes)   inline method (bytecode parsing)
                            @ 4  com.jprofiler.agent.probe.g.d.isRecording():boolean (8 bytes)   inline method (bytecode parsing)
                              @ 4  com.jprofiler.agent.probe.g.c.d():boolean (5 bytes)   inline accessor method (bytecode parsing)
                                              @ 14  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining no type profile exists
                                              @ 1  com.jprofiler.agent.probe.a.g.l():g$b (32 bytes)   relevance-based (relevance=2.000000, probability=0.499985, bonus=1.000000, nodes=26 <= 300.000000)
                                            @ 4  com.jprofiler.agent.probe.a.g.a(Object, String, int):void (21 bytes)   relevance-based (relevance=1.000000, probability=0.499985, bonus=1.000000, nodes=29 <= 300.000000)
                                          @ 29  com.jprofiler.agent.callee.PM10Callee.__ejt_i_exit_openFis(Object, Object):void (25 bytes)   relevance-based (relevance=1.000000, probability=0.999970, bonus=1.000000, nodes=38 <= 300.000000)
                                        @ 96  java.io.FileInputStream.open(String):void (33 bytes)   relevance-based (relevance=1.001756, probability=0.999980, bonus=1.000000, nodes=67 <= 300.000000)
                            @ 15  java.io.FileDescriptor$1.get(FileDescriptor):int (5 bytes)   inline method (bytecode parsing)
                            @ 25  java.io.FileDescriptor$1.getHandle(FileDescriptor):long (5 bytes)   inline method (bytecode parsing)
                            @ 37  jdk.internal.ref.CleanerFactory.cleaner():Cleaner (4 bytes)   inline method (bytecode parsing)
                            @ 42  java.io.FileCleanable.<init>(FileDescriptor, Cleaner, int, long):void (18 bytes)   inline method (bytecode parsing)
                                          @ 5  java.io.FileDescriptor.valid():boolean (25 bytes)   relevance-based (relevance=1.502620, probability=0.374989, bonus=1.000000, nodes=21 <= 300.000000)
                            @ 2  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 12  java.lang.ref.PhantomReference.<init>(Object, ReferenceQueue):void (7 bytes)   inline method (bytecode parsing)
                                            @ 4  java.util.function.Function.apply(Object):Object (0 bytes)   not inlining no type profile exists
                                            @ 6  jdk.internal.ref.CleanerImpl.getCleanerImpl(Cleaner):CleanerImpl (13 bytes)   relevance-based (relevance=0.751310, probability=0.187494, bonus=1.000000, nodes=11 <= 225.392945)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.502620, probability=0.187494, bonus=1.000000, nodes=8)
                                            @ 3  java.lang.ref.Reference.<init>(Object, ReferenceQueue):void (25 bytes)   relevance-based (relevance=0.751310, probability=0.187494, bonus=1.000000, nodes=24 <= 225.392945)
                                            @ 4  java.util.function.Function.apply(Object):Object (0 bytes)   not inlining no type profile exists
                                            @ 27  jdk.internal.ref.CleanerImpl.getCleanerImpl(Cleaner):CleanerImpl (13 bytes)   relevance-based (relevance=1.502620, probability=0.187494, bonus=1.000000, nodes=11 <= 300.000000)
                                            @ 37  jdk.internal.ref.PhantomCleanable.insert():void (53 bytes)   relevance-based (relevance=1.502620, probability=0.187494, bonus=1.000000, nodes=21 <= 300.000000)
                                          @ 3  jdk.internal.ref.PhantomCleanable.<init>(Object, Cleaner):void (49 bytes)   relevance-based (relevance=0.751310, probability=0.187494, bonus=1.000000, nodes=71 <= 225.392945)
                            @ 3  java.util.Objects.requireNonNull(Object, String):Object (15 bytes)   inline method (bytecode parsing)
                              @ 9  java.lang.NullPointerException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                  @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                          @ 18  jdk.internal.ref.PhantomCleanable.clear():void (12 bytes)   not inlining no type profile exists
              s                           @ 45  java.io.FileDescriptor.registerCleanup(PhantomCleanable):void (27 bytes)   relevance-based (relevance=0.751310, probability=0.187494, bonus=1.000000, nodes=24 <= 225.392945)
                                        @ 103  java.io.FileCleanable.register(FileDescriptor):void (49 bytes)   relevance-based (relevance=0.751310, probability=0.749978, bonus=1.000000, nodes=133 <= 225.392945)
                                      @ 17  java.io.FileInputStream.<init>(File):void (107 bytes)   relevance-based (relevance=1.008066, probability=0.999980, bonus=1.000000, nodes=292 <= 300.000000)
                                    @ 6  java.io.FileInputStream.<init>(String):void (21 bytes)   not inlining relevance-based (relevance=1.000010, probability=0.999990, bonus=1.000000, nodes=453 > 300.000000)
                            @ 15  java.lang.NullPointerException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 17  java.lang.NullPointerException.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.RuntimeException.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.Exception.<init>():void (5 bytes)   inline method (bytecode parsing)
                                        @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                                      @ 2  java.io.Reader.<init>(Object):void (27 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                            @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 9  java.util.concurrent.locks.ReentrantLock$NonfairSync.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.util.concurrent.locks.ReentrantLock$Sync.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>():void (5 bytes)   inline method (bytecode parsing)
                                  @ 1  java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>():void (5 bytes)   inline method (bytecode parsing)
                                    @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                                            @ 9  java.util.concurrent.locks.ReentrantLock.<init>():void (16 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=15 <= 300.000000)
                                          @ 10  jdk.internal.misc.InternalLock.<init>():void (16 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=23 <= 300.000000)
                                        @ 18  jdk.internal.misc.InternalLock.newLockOr(Object):Object (18 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=25 <= 300.000000)
                                      @ 22  java.io.InputStreamReader.lockFor(InputStreamReader):Object (24 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=26 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 23  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 35  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 44  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910931, bonus=1.000000, nodes=21 <= 300.000000)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910931, bonus=1.000000, nodes=28 <= 300.000000)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910931, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910931, bonus=1.000000, nodes=47 <= 300.000000)
                 n                    @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=21 <= 300.000000)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=28 <= 300.000000)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.097756, probability=0.999980, bonus=1.000000, nodes=47 <= 300.000000)
                 n                    @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 11  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 23  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 35  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 47  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 71  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 80  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 92  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                                @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921655, bonus=1.000000, nodes=21 <= 300.000000)
                                              @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921655, bonus=1.000000, nodes=28 <= 300.000000)
                                            @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921655, bonus=1.000000, nodes=34 <= 300.000000)
                                          @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.921655, bonus=1.000000, nodes=47 <= 300.000000)
                 n                      @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 11  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 14  java.nio.charset.CharsetDecoder.<init>(Charset, float, float):void (10 bytes)   inline method (bytecode parsing)
                            @ 23  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921655, bonus=1.000000, nodes=21 <= 300.000000)
                                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921655, bonus=1.000000, nodes=28 <= 300.000000)
                                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921655, bonus=1.000000, nodes=34 <= 300.000000)
                                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.921655, bonus=1.000000, nodes=47 <= 300.000000)
                 n                          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 40  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 56  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 72  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                            @ 10  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 29  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 49  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 63  java.nio.charset.CharsetDecoder.implReplaceWith(String):void (1 bytes)   inline method (bytecode parsing)
                                                    @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=5)
                                                  @ 15  java.lang.String.length():int (11 bytes)   trivial (relevance=4.000000, probability=0.999980, bonus=1.000000, nodes=5)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                                  @ 2  java.lang.Throwable.<init>(String):void (34 bytes)   not inlining too large previous low-level graph (low-level-nodes: 618, relevance=1.000000, probability=0.249995, bonus=1.000000, nodes=22)
                                                @ 95  java.nio.charset.CharsetDecoder.replaceWith(String):CharsetDecoder (68 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=22 <= 300.000000)
                                              @ 6  java.nio.charset.CharsetDecoder.<init>(Charset, float, float, String):void (100 bytes)   relevance-based (relevance=1.084983, probability=0.999980, bonus=1.000000, nodes=44 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.500141, probability=0.460958, bonus=1.000000, nodes=21 <= 150.042332)
                                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.500141, probability=0.460958, bonus=1.000000, nodes=28 <= 150.042332)
                                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.500141, probability=0.460958, bonus=1.000000, nodes=34 <= 150.042332)
                                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.500141, probability=0.460958, bonus=1.000000, nodes=47 <= 150.042332)
                 n                          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                            @ 5  sun.nio.cs.UTF_8$Decoder.<init>(Charset):void (27 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=158 <= 300.000000)
                                          @ 14  sun.nio.cs.UTF_8.newDecoder():CharsetDecoder (9 bytes)   relevance-based (relevance=1.084983, probability=0.999980, bonus=1.000000, nodes=159 <= 300.000000)
                                        @ 26  sun.nio.cs.StreamDecoder.<init>(InputStream, Object, Charset):void (96 bytes)   not inlining relevance-based (relevance=1.097756, probability=0.999980, bonus=1.000000, nodes=356 > 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981198, bonus=1.000000, nodes=21 <= 300.000000)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981198, bonus=1.000000, nodes=28 <= 300.000000)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981198, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077138, probability=0.981198, bonus=1.000000, nodes=47 <= 300.000000)
                 n                    @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981198, bonus=1.000000, nodes=21 <= 300.000000)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981198, bonus=1.000000, nodes=28 <= 300.000000)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981198, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077138, probability=0.981198, bonus=1.000000, nodes=47 <= 300.000000)
                 n                    @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                      @ 26  sun.nio.cs.StreamDecoder.forInputStreamReader(InputStream, Object, Charset):StreamDecoder (58 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=222 <= 300.000000)
                                    @ 10  java.io.InputStreamReader.<init>(InputStream, Charset):void (33 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=257 <= 300.000000)
                                  @ 8  jdk.internal.platform.CgroupUtil.lambda$readStringValue$0(CgroupSubsystemController, String):BufferedReader (45 bytes)   not inlining relevance-based (relevance=1.000010, probability=0.999990, bonus=1.000000, nodes=305 > 300.000000)
                                @ 29  jdk.internal.platform.CgroupUtil$$Lambda/0x000000080012a020.run():Object (12 bytes)   relevance-based (relevance=1.000010, probability=0.999990, bonus=1.000000, nodes=13 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 3  java.lang.Throwable.<init>(String, Throwable):void (39 bytes)   not inlining relevance-based (relevance=0.000003, probability=0.000002, bonus=1.000000, nodes=25 > 0.000750)
                              @ 9  java.security.AccessController.doPrivileged(PrivilegedExceptionAction):Object (22 bytes)   relevance-based (relevance=2.000020, probability=1.000000, bonus=1.000000, nodes=45 <= 300.000000)
                              @ 64  jdk.internal.platform.CgroupUtil.unwrapIOExceptionAndRethrow(PrivilegedActionException):void (42 bytes)   not inlining relevance-based (relevance=0.000010, probability=0.000005, bonus=1.000000, nodes=14 > 0.003000)
              s               @ 72  java.lang.Throwable.getCause():Throwable (17 bytes)   not inlining relevance-based (relevance=0.000010, probability=0.000005, bonus=1.000000, nodes=12 > 0.003000)
                            @ 20  jdk.internal.misc.InternalLock.lock():void (8 bytes)   inline method (bytecode parsing)
                              @ 4  java.util.concurrent.locks.ReentrantLock.lock():void (8 bytes)   inline method (bytecode parsing)
                            @ 33  jdk.internal.misc.InternalLock.unlock():void (8 bytes)   inline method (bytecode parsing)
                              @ 4  java.util.concurrent.locks.ReentrantLock.unlock():void (10 bytes)   inline method (bytecode parsing)
                                @ 5  java.util.concurrent.locks.AbstractQueuedSynchronizer.release(int):boolean (19 bytes)   inline method (bytecode parsing)
                            @ 278  java.lang.StringBuilder.<init>(int):void (6 bytes)   inline method (bytecode parsing)
                            @ 294  java.lang.StringBuilder.append(char[], int, int):StringBuilder (10 bytes)   inline method (bytecode parsing)
                            @ 63  java.lang.StringBuilder.length():int (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.AbstractStringBuilder.length():int (5 bytes)   inline accessor method (bytecode parsing)
                            @ 70  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 233  java.lang.StringBuilder.append(char[], int, int):StringBuilder (10 bytes)   inline method (bytecode parsing)
                            @ 238  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 13  java.io.IOException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                    @ 2  java.lang.Throwable.<init>(String):void (34 bytes)   not inlining too large previous low-level graph (low-level-nodes: 618, relevance=1.000000, probability=0.249998, bonus=1.000000, nodes=22)
                                  @ 3  java.io.BufferedReader.ensureOpen():void (18 bytes)   relevance-based (relevance=1.000000, probability=0.499995, bonus=1.000000, nodes=17 <= 300.000000)
                                    @ 94  com.jprofiler.agent.AllocationCallee.__ejt_array_alloc(Object):void (15 bytes)   trivial (relevance=1.000010, probability=0.041666, bonus=1.000000, nodes=8)
                                  @ 150  java.io.Reader.read(char[], int, int):int (0 bytes)   not inlining no type profile exists
                                  @ 44  java.io.BufferedReader.fill():void (175 bytes)   relevance-based (relevance=1.000000, probability=0.333330, bonus=1.000000, nodes=110 <= 300.000000)
                                @ 57  java.io.BufferedReader.implReadLine(boolean, boolean[]):String (301 bytes)   not inlining relevance-based (relevance=1.001444, probability=0.499995, bonus=1.000000, nodes=309 > 300.000000)
                            @ 7  java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int, int):boolean (13 bytes)   inline method (bytecode parsing)
                            @ 15  java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(Thread):void (6 bytes)   inline method (bytecode parsing)
                            @ 21  java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread():Thread (5 bytes)   inline accessor method (bytecode parsing)
                            @ 29  java.util.concurrent.locks.AbstractQueuedSynchronizer.getState():int (5 bytes)   inline accessor method (bytecode parsing)
                            @ 51  java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(int):void (6 bytes)   inline method (bytecode parsing)
                                  @ 1  java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock():boolean (58 bytes)   relevance-based (relevance=1.000000, probability=0.499995, bonus=1.000000, nodes=37 <= 300.000000)
                                @ 4  java.util.concurrent.locks.ReentrantLock$Sync.lock():void (13 bytes)   relevance-based (relevance=1.001444, probability=0.499995, bonus=1.000000, nodes=46 <= 300.000000)
                            @ 278  java.lang.StringBuilder.<init>(int):void (6 bytes)   inline method (bytecode parsing)
                            @ 294  java.lang.StringBuilder.append(char[], int, int):StringBuilder (10 bytes)   inline method (bytecode parsing)
                            @ 63  java.lang.StringBuilder.length():int (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.AbstractStringBuilder.length():int (5 bytes)   inline accessor method (bytecode parsing)
                            @ 70  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 233  java.lang.StringBuilder.append(char[], int, int):StringBuilder (10 bytes)   inline method (bytecode parsing)
                            @ 238  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 13  java.io.IOException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                    @ 2  java.lang.Throwable.<init>(String):void (34 bytes)   not inlining too large previous low-level graph (low-level-nodes: 618, relevance=1.000000, probability=0.249998, bonus=1.000000, nodes=22)
                                  @ 3  java.io.BufferedReader.ensureOpen():void (18 bytes)   relevance-based (relevance=1.000000, probability=0.499995, bonus=1.000000, nodes=17 <= 300.000000)
                                    @ 94  com.jprofiler.agent.AllocationCallee.__ejt_array_alloc(Object):void (15 bytes)   trivial (relevance=1.000010, probability=0.041666, bonus=1.000000, nodes=8)
                                  @ 150  java.io.Reader.read(char[], int, int):int (0 bytes)   not inlining no type profile exists
                                  @ 44  java.io.BufferedReader.fill():void (175 bytes)   relevance-based (relevance=1.000000, probability=0.333330, bonus=1.000000, nodes=110 <= 300.000000)
                                @ 26  java.io.BufferedReader.implReadLine(boolean, boolean[]):String (301 bytes)   not inlining relevance-based (relevance=1.000154, probability=0.499995, bonus=1.000000, nodes=309 > 300.000000)
                            @ 1  java.util.concurrent.locks.AbstractQueuedSynchronizer.getState():int (5 bytes)   inline accessor method (bytecode parsing)
                            @ 8  java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread():Thread (5 bytes)   inline accessor method (bytecode parsing)
                            @ 41  java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(Thread):void (6 bytes)   inline method (bytecode parsing)
                            @ 46  java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(int):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(int):boolean (51 bytes)   relevance-based (relevance=1.000154, probability=0.499995, bonus=1.000000, nodes=37 <= 300.000000)
                                @ 12  java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node):void (34 bytes)   trivial (relevance=0.998712, probability=0.499274, bonus=1.000000, nodes=6)
                              @ 3  java.io.BufferedReader.readLine(boolean, boolean[]):String (72 bytes)   relevance-based (relevance=2.000000, probability=0.999990, bonus=1.000000, nodes=133 <= 300.000000)
                            @ 18  jdk.internal.misc.InternalLock.lock():void (8 bytes)   inline method (bytecode parsing)
                              @ 4  java.util.concurrent.locks.ReentrantLock.lock():void (8 bytes)   inline method (bytecode parsing)
                            @ 26  jdk.internal.misc.InternalLock.unlock():void (8 bytes)   inline method (bytecode parsing)
                              @ 4  java.util.concurrent.locks.ReentrantLock.unlock():void (10 bytes)   inline method (bytecode parsing)
                                @ 5  java.util.concurrent.locks.AbstractQueuedSynchronizer.release(int):boolean (19 bytes)   inline method (bytecode parsing)
                                @ 12  java.io.Reader.close():void (0 bytes)   not inlining no type profile exists
                                @ 47  java.io.BufferedReader.implClose():void (42 bytes)   relevance-based (relevance=1.001444, probability=0.249998, bonus=1.000000, nodes=18 <= 300.000000)
                            @ 7  java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int, int):boolean (13 bytes)   inline method (bytecode parsing)
                            @ 15  java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(Thread):void (6 bytes)   inline method (bytecode parsing)
                            @ 21  java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread():Thread (5 bytes)   inline accessor method (bytecode parsing)
                            @ 29  java.util.concurrent.locks.AbstractQueuedSynchronizer.getState():int (5 bytes)   inline accessor method (bytecode parsing)
                            @ 51  java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(int):void (6 bytes)   inline method (bytecode parsing)
                                  @ 1  java.util.concurrent.locks.ReentrantLock$NonfairSync.initialTryLock():boolean (58 bytes)   relevance-based (relevance=1.000000, probability=0.249998, bonus=1.000000, nodes=37 <= 300.000000)
                                @ 4  java.util.concurrent.locks.ReentrantLock$Sync.lock():void (13 bytes)   relevance-based (relevance=2.000000, probability=0.249998, bonus=1.000000, nodes=46 <= 300.000000)
                                @ 12  java.io.Reader.close():void (0 bytes)   not inlining no type profile exists
                                @ 22  java.io.BufferedReader.implClose():void (42 bytes)   relevance-based (relevance=2.000000, probability=0.249998, bonus=1.000000, nodes=18 <= 300.000000)
                            @ 1  java.util.concurrent.locks.AbstractQueuedSynchronizer.getState():int (5 bytes)   inline accessor method (bytecode parsing)
                            @ 8  java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread():Thread (5 bytes)   inline accessor method (bytecode parsing)
                            @ 41  java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(Thread):void (6 bytes)   inline method (bytecode parsing)
                            @ 46  java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(int):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.util.concurrent.locks.ReentrantLock$Sync.tryRelease(int):boolean (51 bytes)   relevance-based (relevance=2.000000, probability=0.249998, bonus=1.000000, nodes=37 <= 300.000000)
                                @ 12  java.util.concurrent.locks.AbstractQueuedSynchronizer.signalNext(AbstractQueuedSynchronizer$Node):void (34 bytes)   trivial (relevance=1.997116, probability=0.249637, bonus=1.000000, nodes=6)
                              @ 31  java.io.BufferedReader.close():void (63 bytes)   relevance-based (relevance=1.000154, probability=0.499995, bonus=1.000000, nodes=160 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                 n            @ 16  java.lang.Throwable.fillInStackTrace(int):Throwable (0 bytes)   not inlining it is a non-intrinsic native method
              s               @ 24  java.lang.Throwable.fillInStackTrace():Throwable (29 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=19 <= 300.000000)
                            @ 1  java.io.InputStream.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 9  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 20  java.io.File.getPath():String (5 bytes)   inline accessor method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 0  java.lang.System.allowSecurityManager():boolean (13 bytes)   trivial (relevance=1.001716, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 28  java.lang.System.getSecurityManager():SecurityManager (12 bytes)   relevance-based (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 13  java.io.UnixFileSystem.isInvalid(File):boolean (17 bytes)   inline method (bytecode parsing)
                              @ 1  java.io.File.getPath():String (5 bytes)   inline accessor method (bytecode parsing)
                              @ 5  java.lang.String.indexOf(int):int (7 bytes)   inline method (bytecode parsing)
                                  @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                                    @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                  @ 14  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 11  java.lang.Math.max(int, int):int (11 bytes)   inline method (bytecode parsing)
                                    @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.004505, probability=1.000000, bonus=1.000000, nodes=5)
                                    @ 18  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.004505, probability=1.000000, bonus=1.000000, nodes=7)
                                  @ 17  java.lang.StringLatin1.indexOf(byte[], int, int, int):int (37 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=17 <= 300.000000)
                                @ 3  java.lang.String.indexOf(int, int):int (37 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                              @ 54  java.io.File.isInvalid():boolean (47 bytes)   relevance-based (relevance=1.001716, probability=1.000000, bonus=1.000000, nodes=43 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 75  java.io.FileDescriptor.<init>():void (17 bytes)   relevance-based (relevance=1.001716, probability=1.000000, bonus=1.000000, nodes=14 <= 300.000000)
              s               @ 86  java.io.FileDescriptor.attach(Closeable):void (73 bytes)   relevance-based (relevance=1.001716, probability=1.000000, bonus=1.000000, nodes=15 <= 300.000000)
                            @ 6  jdk.internal.misc.Blocker.currentCarrierThread():Thread (9 bytes)   inline method (bytecode parsing)
                              @ 3  java.lang.System$2.currentCarrierThread():Thread (4 bytes)   inline method (bytecode parsing)
                                  @ 0  jdk.internal.misc.VM.isBooted():boolean (13 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=10 <= 300.000000)
                                @ 1  jdk.internal.misc.Blocker.begin():long (97 bytes)   relevance-based (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=20 <= 300.000000)
                 n            @ 7  java.io.FileInputStream.open0(String):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 20  jdk.internal.misc.Blocker.end(long):void (71 bytes)   trivial (relevance=0.000010, probability=0.000010, bonus=1.000000, nodes=4)
                                @ 11  jdk.internal.misc.Blocker.end(long):void (71 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=4)
                            @ 13  com.jprofiler.agent.probe.a.g.c(Object, String):void (8 bytes)   inline method (bytecode parsing)
                            @ 4  com.jprofiler.agent.probe.g.d.isRecording():boolean (8 bytes)   inline method (bytecode parsing)
                              @ 4  com.jprofiler.agent.probe.g.c.d():boolean (5 bytes)   inline accessor method (bytecode parsing)
                                    @ 14  java.lang.ThreadLocal.get():Object (8 bytes)   not inlining no type profile exists
                                    @ 1  com.jprofiler.agent.probe.a.g.l():g$b (32 bytes)   relevance-based (relevance=2.000000, probability=0.499995, bonus=1.000000, nodes=26 <= 300.000000)
                                  @ 4  com.jprofiler.agent.probe.a.g.a(Object, String, int):void (21 bytes)   relevance-based (relevance=1.000000, probability=0.499995, bonus=1.000000, nodes=29 <= 300.000000)
                                @ 29  com.jprofiler.agent.callee.PM10Callee.__ejt_i_exit_openFis(Object, Object):void (25 bytes)   relevance-based (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=38 <= 300.000000)
                              @ 96  java.io.FileInputStream.open(String):void (33 bytes)   relevance-based (relevance=1.001716, probability=1.000000, bonus=1.000000, nodes=67 <= 300.000000)
                            @ 15  java.io.FileDescriptor$1.get(FileDescriptor):int (5 bytes)   inline method (bytecode parsing)
                            @ 25  java.io.FileDescriptor$1.getHandle(FileDescriptor):long (5 bytes)   inline method (bytecode parsing)
                            @ 37  jdk.internal.ref.CleanerFactory.cleaner():Cleaner (4 bytes)   inline method (bytecode parsing)
                            @ 42  java.io.FileCleanable.<init>(FileDescriptor, Cleaner, int, long):void (18 bytes)   inline method (bytecode parsing)
                                @ 5  java.io.FileDescriptor.valid():boolean (25 bytes)   relevance-based (relevance=1.502559, probability=0.374996, bonus=1.000000, nodes=21 <= 300.000000)
                            @ 2  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 12  java.lang.ref.PhantomReference.<init>(Object, ReferenceQueue):void (7 bytes)   inline method (bytecode parsing)
                                  @ 4  java.util.function.Function.apply(Object):Object (0 bytes)   not inlining no type profile exists
                                  @ 6  jdk.internal.ref.CleanerImpl.getCleanerImpl(Cleaner):CleanerImpl (13 bytes)   relevance-based (relevance=0.751280, probability=0.187498, bonus=1.000000, nodes=11 <= 225.383902)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                    @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.502559, probability=0.187498, bonus=1.000000, nodes=8)
                                  @ 3  java.lang.ref.Reference.<init>(Object, ReferenceQueue):void (25 bytes)   relevance-based (relevance=0.751280, probability=0.187498, bonus=1.000000, nodes=24 <= 225.383902)
                                  @ 4  java.util.function.Function.apply(Object):Object (0 bytes)   not inlining no type profile exists
                                  @ 27  jdk.internal.ref.CleanerImpl.getCleanerImpl(Cleaner):CleanerImpl (13 bytes)   relevance-based (relevance=1.502559, probability=0.187498, bonus=1.000000, nodes=11 <= 300.000000)
                                  @ 37  jdk.internal.ref.PhantomCleanable.insert():void (53 bytes)   relevance-based (relevance=1.502559, probability=0.187498, bonus=1.000000, nodes=21 <= 300.000000)
                                @ 3  jdk.internal.ref.PhantomCleanable.<init>(Object, Cleaner):void (49 bytes)   relevance-based (relevance=0.751280, probability=0.187498, bonus=1.000000, nodes=71 <= 225.383902)
                            @ 3  java.util.Objects.requireNonNull(Object, String):Object (15 bytes)   inline method (bytecode parsing)
                              @ 9  java.lang.NullPointerException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                  @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 18  jdk.internal.ref.PhantomCleanable.clear():void (12 bytes)   not inlining no type profile exists
              s                 @ 45  java.io.FileDescriptor.registerCleanup(PhantomCleanable):void (27 bytes)   relevance-based (relevance=0.751280, probability=0.187498, bonus=1.000000, nodes=24 <= 225.383902)
                              @ 103  java.io.FileCleanable.register(FileDescriptor):void (49 bytes)   relevance-based (relevance=0.751280, probability=0.749993, bonus=1.000000, nodes=133 <= 225.383902)
                            @ 27  java.nio.file.Paths.get(String, String[]):Path (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.nio.file.Path.of(String, String[]):Path (9 bytes)   inline method (bytecode parsing)
                            @ 38  java.io.FileReader.<init>(String, Charset):void (14 bytes)   inline method (bytecode parsing)
                            @ 41  java.io.BufferedReader.<init>(Reader):void (9 bytes)   inline method (bytecode parsing)
                              @ 10  jdk.internal.platform.cgroupv2.CgroupV2SubsystemController.path():String (5 bytes)   trivial (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 20  com.jprofiler.agent.AllocationCallee.__ejt_array_alloc(Object):void (15 bytes)   trivial (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 0  jdk.internal.misc.VM.isModuleSystemInited():boolean (13 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=10 <= 300.000000)
                              @ 0  java.nio.file.FileSystems.getDefault():FileSystem (14 bytes)   relevance-based (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=11 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 20  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 53  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 56  java.lang.StringBuilder.<init>():void (7 bytes)   inline method (bytecode parsing)
                            @ 65  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 79  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 82  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 91  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 128  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 140  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 154  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 157  java.lang.StringBuilder.length():int (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.AbstractStringBuilder.length():int (5 bytes)   inline accessor method (bytecode parsing)
                            @ 166  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 182  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 185  java.lang.StringBuilder.append(char):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 194  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 208  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 211  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 220  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 238  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 241  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 250  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 266  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 278  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 287  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                              @ 5  sun.nio.fs.UnixFileSystem.getPath(String, String[]):Path (301 bytes)   not inlining too large previous low-level graph (low-level-nodes: 3302, relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=442)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 46  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 24  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 27  java.lang.String.<init>(byte[], Charset):void (16 bytes)   inline method (bytecode parsing)
                              @ 2  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 36  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 45  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910949, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921905, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921905, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921905, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.012026, probability=0.921905, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                    @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                                    @ 443  java.lang.StringCoding.hasNegatives(byte[], int, int):boolean (16 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 13  java.util.Arrays.copyOfRangeByte(byte[], int, int):byte[] (38 bytes)   inline method (bytecode parsing)
                              @ 3  java.util.Arrays.checkLength(int, int):void (38 bytes)   inline method (bytecode parsing)
                                      @ 14  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000010, probability=0.509999, bonus=1.000000, nodes=8)
                                      @ 29  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.000010, probability=0.509999, bonus=1.000000, nodes=7)
                                    @ 456  java.util.Arrays.copyOfRange(byte[], int, int):byte[] (25 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 12  java.lang.String.<init>(Charset, byte[], int, int):void (922 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=59 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.922157, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.922157, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.922157, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.012303, probability=0.922157, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981279, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981279, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981279, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077205, probability=0.981279, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 28  sun.nio.fs.Util.toString(byte[]):String (59 bytes)   relevance-based (relevance=1.097756, probability=1.000000, bonus=1.000000, nodes=278 <= 300.000000)
                              @ 30  sun.nio.fs.UnixPath.toString():String (60 bytes)   not inlining relevance-based (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=361 > 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 40  java.io.UnixFileSystem.prefixLength(String):int (15 bytes)   inline method (bytecode parsing)
                              @ 3  java.lang.String.startsWith(String):boolean (7 bytes)   inline method (bytecode parsing)
                                  @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 21  java.lang.String.endsWith(String):boolean (15 bytes)   inline method (bytecode parsing)
                              @ 7  java.lang.String.length():int (11 bytes)   inline method (bytecode parsing)
                                @ 6  java.lang.String.coder():byte (15 bytes)   inline method (bytecode parsing)
                                      @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                      @ 7  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                      @ 14  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                                      @ 28  java.lang.StringLatin1.indexOf(byte[], byte[]):int (25 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=16 <= 300.000000)
                                    @ 3  java.lang.String.indexOf(String):int (64 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=25 <= 300.000000)
                                      @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=5)
                                    @ 3  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=8)
                                        @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998038, bonus=1.000000, nodes=5)
                                      @ 6  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998038, bonus=1.000000, nodes=8)
                                        @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.998038, bonus=1.000000, nodes=5)
                                      @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.998038, bonus=1.000000, nodes=5)
                                      @ 39  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991989, bonus=1.000000, nodes=5)
                                      @ 47  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.991989, bonus=1.000000, nodes=5)
                                      @ 70  jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int):int (103 bytes)   relevance-based (relevance=1.000000, probability=0.991989, bonus=1.000000, nodes=30 <= 300.000000)
                                    @ 11  java.lang.String.startsWith(String, int):boolean (123 bytes)   relevance-based (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=62 <= 300.000000)
                                  @ 26  java.io.UnixFileSystem.normalize(String):String (41 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=97 <= 300.000000)
                                      @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=5)
                                    @ 6  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.999990, bonus=1.000000, nodes=8)
                                      @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999990, bonus=1.000000, nodes=5)
                                    @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.006099, probability=0.999990, bonus=1.000000, nodes=5)
                                    @ 39  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.993928, bonus=1.000000, nodes=5)
                                    @ 47  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.993928, bonus=1.000000, nodes=5)
                                    @ 70  jdk.internal.util.ArraysSupport.mismatch(byte[], int, byte[], int, int):int (103 bytes)   relevance-based (relevance=1.000000, probability=0.993928, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.String.startsWith(String, int):boolean (123 bytes)   relevance-based (relevance=1.008066, probability=0.999990, bonus=1.000000, nodes=51 <= 300.000000)
                                @ 10  java.io.File.<init>(String):void (47 bytes)   relevance-based (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=166 <= 300.000000)
                            @ 1  java.io.InputStream.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 9  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 20  java.io.File.getPath():String (5 bytes)   inline accessor method (bytecode parsing)
                                @ 17  java.io.FileInputStream.<init>(File):void (107 bytes)   not inlining too large previous low-level graph (low-level-nodes: 2181, relevance=1.008066, probability=0.999990, bonus=1.000000, nodes=55)
                              @ 6  java.io.FileInputStream.<init>(String):void (21 bytes)   relevance-based (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=176 <= 300.000000)
                            @ 15  java.lang.NullPointerException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 17  java.lang.NullPointerException.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.RuntimeException.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.Exception.<init>():void (5 bytes)   inline method (bytecode parsing)
                                  @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                                @ 2  java.io.Reader.<init>(Object):void (27 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                      @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 9  java.util.concurrent.locks.ReentrantLock$NonfairSync.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.util.concurrent.locks.ReentrantLock$Sync.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>():void (5 bytes)   inline method (bytecode parsing)
                                  @ 1  java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>():void (5 bytes)   inline method (bytecode parsing)
                                    @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                        @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                                        @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                                      @ 9  java.util.concurrent.locks.ReentrantLock.<init>():void (16 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=15 <= 300.000000)
                                    @ 10  jdk.internal.misc.InternalLock.<init>():void (16 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=23 <= 300.000000)
                                  @ 18  jdk.internal.misc.InternalLock.newLockOr(Object):Object (18 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=25 <= 300.000000)
                                @ 22  java.io.InputStreamReader.lockFor(InputStreamReader):Object (24 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=26 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 23  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 35  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 44  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.910931, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.910931, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.910931, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.910931, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.097756, probability=0.999980, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 11  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 23  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 35  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 47  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 59  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 71  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 80  com.jprofiler.agent.InstrumentationCallee.__ejt_enterConstructor(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 92  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                          @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921886, bonus=1.000000, nodes=21 <= 300.000000)
                                        @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921886, bonus=1.000000, nodes=28 <= 300.000000)
                                      @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921886, bonus=1.000000, nodes=34 <= 300.000000)
                                    @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.921886, bonus=1.000000, nodes=47 <= 300.000000)
                 n                @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 11  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 14  java.nio.charset.CharsetDecoder.<init>(Charset, float, float):void (10 bytes)   inline method (bytecode parsing)
                            @ 23  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.921886, bonus=1.000000, nodes=21 <= 300.000000)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.921886, bonus=1.000000, nodes=28 <= 300.000000)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.921886, bonus=1.000000, nodes=34 <= 300.000000)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.921886, bonus=1.000000, nodes=47 <= 300.000000)
                 n                    @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 40  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 56  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 72  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                          @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                            @ 10  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 29  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 49  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 63  java.nio.charset.CharsetDecoder.implReplaceWith(String):void (1 bytes)   inline method (bytecode parsing)
                                              @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=5)
                                            @ 15  java.lang.String.length():int (11 bytes)   trivial (relevance=4.000000, probability=0.999980, bonus=1.000000, nodes=5)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                            @ 2  java.lang.Throwable.<init>(String):void (34 bytes)   not inlining too large previous low-level graph (low-level-nodes: 618, relevance=1.000000, probability=0.249995, bonus=1.000000, nodes=22)
                                          @ 95  java.nio.charset.CharsetDecoder.replaceWith(String):CharsetDecoder (68 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=22 <= 300.000000)
                                        @ 6  java.nio.charset.CharsetDecoder.<init>(Charset, float, float, String):void (100 bytes)   relevance-based (relevance=1.084711, probability=0.999980, bonus=1.000000, nodes=44 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.500139, probability=0.461071, bonus=1.000000, nodes=21 <= 150.041783)
                                            @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.500139, probability=0.461071, bonus=1.000000, nodes=28 <= 150.041783)
                                          @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.500139, probability=0.461071, bonus=1.000000, nodes=34 <= 150.041783)
                                        @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.500139, probability=0.461071, bonus=1.000000, nodes=47 <= 150.041783)
                 n                    @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                      @ 5  sun.nio.cs.UTF_8$Decoder.<init>(Charset):void (27 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=158 <= 300.000000)
                                    @ 14  sun.nio.cs.UTF_8.newDecoder():CharsetDecoder (9 bytes)   relevance-based (relevance=1.084711, probability=0.999980, bonus=1.000000, nodes=159 <= 300.000000)
                                  @ 26  sun.nio.cs.StreamDecoder.<init>(InputStream, Object, Charset):void (96 bytes)   not inlining relevance-based (relevance=1.097756, probability=0.999980, bonus=1.000000, nodes=356 > 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981265, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981265, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981265, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077211, probability=0.981265, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                        @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.981265, bonus=1.000000, nodes=21 <= 300.000000)
                                      @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.981265, bonus=1.000000, nodes=28 <= 300.000000)
                                    @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.981265, bonus=1.000000, nodes=34 <= 300.000000)
                                  @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.077211, probability=0.981265, bonus=1.000000, nodes=47 <= 300.000000)
                 n              @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 26  sun.nio.cs.StreamDecoder.forInputStreamReader(InputStream, Object, Charset):StreamDecoder (58 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=222 <= 300.000000)
                              @ 10  java.io.InputStreamReader.<init>(InputStream, Charset):void (33 bytes)   relevance-based (relevance=1.008056, probability=0.999980, bonus=1.000000, nodes=257 <= 300.000000)
                            @ 36  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                  @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                      @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 9  java.util.concurrent.locks.ReentrantLock$NonfairSync.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.util.concurrent.locks.ReentrantLock$Sync.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  java.util.concurrent.locks.AbstractQueuedSynchronizer.<init>():void (5 bytes)   inline method (bytecode parsing)
                                  @ 1  java.util.concurrent.locks.AbstractOwnableSynchronizer.<init>():void (5 bytes)   inline method (bytecode parsing)
                                    @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                        @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                                        @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                                      @ 9  java.util.concurrent.locks.ReentrantLock.<init>():void (16 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=15 <= 300.000000)
                                    @ 10  jdk.internal.misc.InternalLock.<init>():void (16 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=23 <= 300.000000)
                                  @ 37  jdk.internal.misc.InternalLock.newLockOr(Object):Object (18 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=25 <= 300.000000)
                                @ 3  java.io.Reader.<init>(Reader):void (52 bytes)   relevance-based (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=35 <= 300.000000)
                                @ 50  com.jprofiler.agent.AllocationCallee.__ejt_array_alloc(Object):void (15 bytes)   trivial (relevance=1.000000, probability=0.999980, bonus=1.000000, nodes=8)
                              @ 5  java.io.BufferedReader.<init>(Reader, int):void (67 bytes)   relevance-based (relevance=1.008056, probability=0.999980, bonus=1.000000, nodes=58 <= 300.000000)
                            @ 5  java.lang.StringBuilder.<init>():void (7 bytes)   inline method (bytecode parsing)
                            @ 9  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 25  java.lang.StringBuilder.<init>():void (7 bytes)   inline method (bytecode parsing)
                            @ 30  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 34  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 39  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 42  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 45  java.lang.StringBuilder.append(String):StringBuilder (8 bytes)   inline method (bytecode parsing)
                            @ 48  java.lang.StringBuilder.toString():String (9 bytes)   inline method (bytecode parsing)
                              @ 5  java.lang.String.<init>(StringBuilder):void (7 bytes)   inline method (bytecode parsing)
                            @ 51  java.io.IOException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 16  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 3  java.lang.AbstractStringBuilder.<init>(int):void (44 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=17 <= 300.000000)
                              @ 2  java.lang.AbstractStringBuilder.append(String):AbstractStringBuilder (45 bytes)   not inlining too large previous low-level graph (low-level-nodes: 331, relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=23)
                            @ 2  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 16  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 3  java.lang.AbstractStringBuilder.<init>(int):void (44 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=17 <= 300.000000)
                              @ 2  java.lang.AbstractStringBuilder.append(String):AbstractStringBuilder (45 bytes)   not inlining too large previous low-level graph (low-level-nodes: 331, relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21)
                              @ 2  java.lang.AbstractStringBuilder.append(String):AbstractStringBuilder (45 bytes)   not inlining too large previous low-level graph (low-level-nodes: 331, relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=23)
                              @ 2  java.lang.AbstractStringBuilder.append(String):AbstractStringBuilder (45 bytes)   not inlining too large previous low-level graph (low-level-nodes: 331, relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 5  java.lang.AbstractStringBuilder.getValue():byte[] (5 bytes)   inline accessor method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 1  java.lang.AbstractStringBuilder.length():int (5 bytes)   inline accessor method (bytecode parsing)
                                @ 10  java.lang.StringBuilder.length():int (5 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                @ 16  java.lang.AbstractStringBuilder.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                            @ 13  java.util.Arrays.copyOfRangeByte(byte[], int, int):byte[] (38 bytes)   inline method (bytecode parsing)
                              @ 3  java.util.Arrays.checkLength(int, int):void (38 bytes)   inline method (bytecode parsing)
                                  @ 14  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000010, probability=0.509999, bonus=1.000000, nodes=8)
                                  @ 29  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.000010, probability=0.509999, bonus=1.000000, nodes=7)
                                @ 32  java.util.Arrays.copyOfRange(byte[], int, int):byte[] (25 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=36 <= 300.000000)
                              @ 3  java.lang.String.<init>(AbstractStringBuilder, Void):void (99 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=54 <= 300.000000)
                              @ 2  java.lang.AbstractStringBuilder.append(String):AbstractStringBuilder (45 bytes)   not inlining too large previous low-level graph (low-level-nodes: 331, relevance=1.960797, probability=0.999995, bonus=1.000000, nodes=21)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                            @ 5  java.lang.AbstractStringBuilder.getValue():byte[] (5 bytes)   inline accessor method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=0.999995, bonus=1.000000, nodes=8)
                            @ 1  java.lang.AbstractStringBuilder.length():int (5 bytes)   inline accessor method (bytecode parsing)
                                @ 10  java.lang.StringBuilder.length():int (5 bytes)   trivial (relevance=1.000000, probability=0.999995, bonus=1.000000, nodes=5)
                                @ 16  java.lang.AbstractStringBuilder.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=0.999995, bonus=1.000000, nodes=9)
                            @ 13  java.util.Arrays.copyOfRangeByte(byte[], int, int):byte[] (38 bytes)   inline method (bytecode parsing)
                              @ 3  java.util.Arrays.checkLength(int, int):void (38 bytes)   inline method (bytecode parsing)
                                  @ 14  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.000010, probability=0.509997, bonus=1.000000, nodes=8)
                                  @ 29  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=1.000010, probability=0.509997, bonus=1.000000, nodes=7)
                                @ 32  java.util.Arrays.copyOfRange(byte[], int, int):byte[] (25 bytes)   relevance-based (relevance=1.000000, probability=0.999995, bonus=1.000000, nodes=36 <= 300.000000)
                              @ 3  java.lang.String.<init>(AbstractStringBuilder, Void):void (99 bytes)   relevance-based (relevance=1.960797, probability=0.999995, bonus=1.000000, nodes=54 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.Throwable.<init>(String):void (34 bytes)   not inlining too large previous low-level graph (low-level-nodes: 618, relevance=1.960787, probability=0.999990, bonus=1.000000, nodes=22)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
