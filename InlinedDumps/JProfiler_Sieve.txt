VM Arguments: 
sun.java.command=Harness Sieve 10 10000
                              @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                              @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 17  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=0.271807, probability=0.212749, bonus=1.000000, nodes=9)
                              @ 27  java.lang.StringLatin1.hashCode(byte[]):int (52 bytes)   relevance-based (relevance=0.271807, probability=0.212749, bonus=1.000000, nodes=22 <= 81.542201)
                              @ 9  java.util.HashMap$Node.<init>(int, Object, Object, HashMap$Node):void (26 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=17 <= 300.000000)
                              @ 4  java.lang.CharacterDataLatin1.getProperties(int):int (11 bytes)   trivial (relevance=1.567850, probability=1.000000, bonus=1.000000, nodes=8)
                                  @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.334382, probability=0.250589, bonus=1.000000, nodes=7)
                                @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.334382, probability=0.250589, bonus=1.000000, nodes=15 <= 100.314527)
                              @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   relevance-based (relevance=0.334382, probability=0.250589, bonus=1.000000, nodes=27 <= 100.314527)
                                @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.334385, probability=0.250516, bonus=1.000000, nodes=8)
                                @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.334385, probability=0.250516, bonus=1.000000, nodes=7)
                              @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.334382, probability=0.250589, bonus=1.000000, nodes=31 <= 100.314527)
                              @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=5)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 1  java.lang.String.length():int (11 bytes)   trivial (relevance=1.172829, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 51  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.172831, probability=0.147361, bonus=1.000000, nodes=8)
                              @ 43  jdk.internal.org.objectweb.asm.ByteVector.enlarge(int):void (78 bytes)   relevance-based (relevance=0.172829, probability=0.147361, bonus=1.000000, nodes=36 <= 51.848667)
                                @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=24.638563, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                                @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=24.638563, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 85  java.lang.String.charAt(int):char (25 bytes)   relevance-based (relevance=1.000000, probability=24.638563, bonus=1.000000, nodes=16 <= 300.000000)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                                    @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.332657, probability=0.249619, bonus=1.000000, nodes=7)
                                  @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.332657, probability=0.249619, bonus=1.000000, nodes=15 <= 99.797101)
                                @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   relevance-based (relevance=0.332657, probability=0.249619, bonus=1.000000, nodes=27 <= 99.797101)
                                  @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.332660, probability=0.249547, bonus=1.000000, nodes=8)
                                  @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.332660, probability=0.249547, bonus=1.000000, nodes=7)
                                @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.332657, probability=0.249619, bonus=1.000000, nodes=31 <= 99.797101)
                              @ 21  java.lang.AbstractStringBuilder.ensureCapacityInternal(int):void (39 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=75 <= 300.000000)
                                  @ 11  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=5)
                                @ 2  java.lang.AbstractStringBuilder.inflateIfNeededFor(String):void (22 bytes)   relevance-based (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=12 <= 300.000000)
                                  @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000010, probability=0.999998, bonus=1.000000, nodes=5)
                                @ 15  java.lang.String.getBytes(byte[], int, byte):void (44 bytes)   relevance-based (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=26 <= 300.000000)
                              @ 30  java.lang.AbstractStringBuilder.putStringAt(int, String):void (19 bytes)   relevance-based (relevance=1.332654, probability=0.999998, bonus=1.000000, nodes=37 <= 300.000000)
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 41  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=0.727833, probability=0.727833, bonus=1.000000, nodes=8)
                            @ 11  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 29  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 44  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                  @ 12  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.727833, probability=0.727833, bonus=1.000000, nodes=8)
                                @ 51  jdk.internal.misc.Unsafe.allocateUninitializedArray0(Class, int):Object (123 bytes)   relevance-based (relevance=0.727833, probability=0.727833, bonus=1.000000, nodes=10 <= 218.349754)
                              @ 33  jdk.internal.misc.Unsafe.allocateUninitializedArray(Class, int):Object (55 bytes)   relevance-based (relevance=0.727833, probability=0.727833, bonus=1.000000, nodes=11 <= 218.349754)
                 n            @ 20  com.jprofiler.agent.AllocationCallee.registerAllocation0(Object, Class):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   relevance-based (relevance=0.727833, probability=0.727833, bonus=1.000000, nodes=18 <= 218.349754)
                              @ 44  java.lang.StringLatin1.equals(byte[], byte[]):boolean (36 bytes)   relevance-based (relevance=1.000000, probability=0.826394, bonus=1.000000, nodes=33 <= 300.000000)
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.159245, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 41  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=0.732522, probability=0.732522, bonus=1.000000, nodes=8)
                            @ 11  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 29  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 44  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                  @ 12  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.732522, probability=0.732522, bonus=1.000000, nodes=8)
                                @ 51  jdk.internal.misc.Unsafe.allocateUninitializedArray0(Class, int):Object (123 bytes)   relevance-based (relevance=0.732522, probability=0.732522, bonus=1.000000, nodes=10 <= 219.756481)
                              @ 33  jdk.internal.misc.Unsafe.allocateUninitializedArray(Class, int):Object (55 bytes)   relevance-based (relevance=0.732522, probability=0.732522, bonus=1.000000, nodes=11 <= 219.756481)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=0.732522, probability=0.732522, bonus=1.000000, nodes=8)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                                    @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.332657, probability=0.249619, bonus=1.000000, nodes=7)
                                  @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.332657, probability=0.249619, bonus=1.000000, nodes=15 <= 99.797101)
                                @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   relevance-based (relevance=0.332657, probability=0.249619, bonus=1.000000, nodes=27 <= 99.797101)
                                  @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.332660, probability=0.249476, bonus=1.000000, nodes=8)
                                  @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.332660, probability=0.249476, bonus=1.000000, nodes=7)
                                @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.332657, probability=0.249619, bonus=1.000000, nodes=31 <= 99.797101)
                              @ 21  java.lang.AbstractStringBuilder.ensureCapacityInternal(int):void (39 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=75 <= 300.000000)
                                  @ 11  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=5)
                                @ 2  java.lang.AbstractStringBuilder.inflateIfNeededFor(String):void (22 bytes)   relevance-based (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=12 <= 300.000000)
                                  @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000010, probability=0.999998, bonus=1.000000, nodes=5)
                                @ 15  java.lang.String.getBytes(byte[], int, byte):void (44 bytes)   relevance-based (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=26 <= 300.000000)
                              @ 30  java.lang.AbstractStringBuilder.putStringAt(int, String):void (19 bytes)   relevance-based (relevance=1.332654, probability=0.999998, bonus=1.000000, nodes=37 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 76  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.360482, probability=0.169968, bonus=1.000000, nodes=21 <= 108.144618)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.360482, probability=0.169968, bonus=1.000000, nodes=28 <= 108.144618)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.360482, probability=0.169968, bonus=1.000000, nodes=34 <= 108.144618)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.360482, probability=0.169968, bonus=1.000000, nodes=47 <= 108.144618)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 76  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.365431, probability=0.267630, bonus=1.000000, nodes=21 <= 109.629158)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.365431, probability=0.267630, bonus=1.000000, nodes=28 <= 109.629158)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.365431, probability=0.267630, bonus=1.000000, nodes=34 <= 109.629158)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.365431, probability=0.267630, bonus=1.000000, nodes=47 <= 109.629158)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.290430, probability=0.212702, bonus=1.000000, nodes=21 <= 87.128938)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.290430, probability=0.212702, bonus=1.000000, nodes=28 <= 87.128938)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.290430, probability=0.212702, bonus=1.000000, nodes=34 <= 87.128938)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.290430, probability=0.212702, bonus=1.000000, nodes=47 <= 87.128938)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                                @ 17  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=0.274547, probability=0.181983, bonus=1.000000, nodes=9)
                                @ 27  java.lang.StringLatin1.hashCode(byte[]):int (52 bytes)   relevance-based (relevance=0.274547, probability=0.181983, bonus=1.000000, nodes=22 <= 82.364118)
                              @ 9  java.lang.String.hashCode():int (60 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=53 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                              @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                  @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                                @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
                              @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=34 <= 300.000000)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 2  java.lang.AbstractStringBuilder.append(String):AbstractStringBuilder (45 bytes)   not inlining too large previous low-level graph (low-level-nodes: 331, relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=23)
                            @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.958141, probability=0.489312, bonus=1.000000, nodes=21 <= 287.442305)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.958141, probability=0.489312, bonus=1.000000, nodes=28 <= 287.442305)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.958141, probability=0.489312, bonus=1.000000, nodes=34 <= 287.442305)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.958141, probability=0.489312, bonus=1.000000, nodes=47 <= 287.442305)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 29  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 41  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 58  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 70  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 79  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 17  com.jprofiler.agent.AllocationCallee.__ejt_array_alloc(Object):void (15 bytes)   trivial (relevance=1.993517, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.642395, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.642395, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.642395, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.280625, probability=0.642395, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 32  java.util.Arrays.fill(boolean[], boolean):void (21 bytes)   relevance-based (relevance=1.993517, probability=1.000000, bonus=1.000000, nodes=20 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.666511, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.666511, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.666511, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.328701, probability=0.666511, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 76  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                      @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.655049, bonus=1.000000, nodes=21 <= 300.000000)
                                    @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.655049, bonus=1.000000, nodes=28 <= 300.000000)
                                  @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.655049, bonus=1.000000, nodes=34 <= 300.000000)
                                @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.305852, probability=0.655049, bonus=1.000000, nodes=47 <= 300.000000)
                 n            @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 49  Sieve.sieve(boolean[], int):int (90 bytes)   relevance-based (relevance=1.993517, probability=1.000000, bonus=1.000000, nodes=157 <= 300.000000)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.642395, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.642395, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.642395, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.280625, probability=0.642395, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.666511, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.666511, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.666511, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.328701, probability=0.666511, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.655049, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.655049, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.655049, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.305852, probability=0.655049, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 23  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_enterMethod(short, short):void (23 bytes)   inline method (bytecode parsing)
                              @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 35  com.jprofiler.agent.InstrumentationCallee.__ejt_filter_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 52  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.501626, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.694967, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.694967, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.694967, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.385428, probability=0.694967, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.716952, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.716952, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.716952, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.429257, probability=0.716952, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.707770, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.707770, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.707770, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.410950, probability=0.707770, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 16  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.706315, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.706315, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.706315, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.706315, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 19  com.jprofiler.agent.InstrumentationCallee.enterFilteredMethod(int, short, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=1.000000, probability=0.730032, bonus=1.000000, nodes=21 <= 300.000000)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=1.000000, probability=0.730032, bonus=1.000000, nodes=28 <= 300.000000)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=1.000000, probability=0.730032, bonus=1.000000, nodes=34 <= 300.000000)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=1.000000, probability=0.730032, bonus=1.000000, nodes=47 <= 300.000000)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitFilteredMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
