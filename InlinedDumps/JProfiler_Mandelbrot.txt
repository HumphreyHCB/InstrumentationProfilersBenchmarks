VM Arguments: 
sun.java.command=Harness Mandelbrot 10 750
                              @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                              @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 17  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=0.276909, probability=0.215883, bonus=1.000000, nodes=9)
                              @ 27  java.lang.StringLatin1.hashCode(byte[]):int (52 bytes)   relevance-based (relevance=0.276909, probability=0.215883, bonus=1.000000, nodes=22 <= 83.072653)
                              @ 138  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=1.333763, probability=1.000000, bonus=1.000000, nodes=8)
                                  @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.332596, probability=0.249585, bonus=1.000000, nodes=7)
                                @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.332596, probability=0.249585, bonus=1.000000, nodes=15 <= 99.778782)
                              @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   relevance-based (relevance=0.332596, probability=0.249585, bonus=1.000000, nodes=27 <= 99.778782)
                                @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.332599, probability=0.249402, bonus=1.000000, nodes=8)
                                @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.332599, probability=0.249402, bonus=1.000000, nodes=7)
                              @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.332596, probability=0.249585, bonus=1.000000, nodes=31 <= 99.778782)
                              @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000010, probability=1.000000, bonus=1.000000, nodes=5)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 10  java.lang.String.length():int (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                                    @ 3  java.lang.Math.max(int, int):int (11 bytes)   trivial (relevance=0.332596, probability=0.249585, bonus=1.000000, nodes=7)
                                  @ 29  jdk.internal.util.ArraysSupport.newLength(int, int, int):int (27 bytes)   relevance-based (relevance=0.332596, probability=0.249585, bonus=1.000000, nodes=15 <= 99.778782)
                                @ 24  java.lang.AbstractStringBuilder.newCapacity(int):int (59 bytes)   relevance-based (relevance=0.332596, probability=0.249585, bonus=1.000000, nodes=27 <= 99.778782)
                                  @ 19  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.332599, probability=0.249402, bonus=1.000000, nodes=8)
                                  @ 30  java.lang.Math.min(int, int):int (11 bytes)   trivial (relevance=0.332599, probability=0.249402, bonus=1.000000, nodes=7)
                                @ 32  java.util.Arrays.copyOf(byte[], int):byte[] (38 bytes)   relevance-based (relevance=0.332596, probability=0.249585, bonus=1.000000, nodes=31 <= 99.778782)
                              @ 21  java.lang.AbstractStringBuilder.ensureCapacityInternal(int):void (39 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=75 <= 300.000000)
                                  @ 11  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=5)
                                @ 2  java.lang.AbstractStringBuilder.inflateIfNeededFor(String):void (22 bytes)   relevance-based (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=12 <= 300.000000)
                                  @ 1  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000010, probability=0.999998, bonus=1.000000, nodes=5)
                                @ 15  java.lang.String.getBytes(byte[], int, byte):void (44 bytes)   relevance-based (relevance=1.000000, probability=0.999998, bonus=1.000000, nodes=26 <= 300.000000)
                              @ 30  java.lang.AbstractStringBuilder.putStringAt(int, String):void (19 bytes)   relevance-based (relevance=1.332593, probability=0.999998, bonus=1.000000, nodes=37 <= 300.000000)
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 41  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=0.728056, probability=0.728056, bonus=1.000000, nodes=8)
                            @ 11  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 29  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 44  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                  @ 12  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.728056, probability=0.728056, bonus=1.000000, nodes=8)
                                @ 51  jdk.internal.misc.Unsafe.allocateUninitializedArray0(Class, int):Object (123 bytes)   relevance-based (relevance=0.728056, probability=0.728056, bonus=1.000000, nodes=10 <= 218.416735)
                              @ 33  jdk.internal.misc.Unsafe.allocateUninitializedArray(Class, int):Object (55 bytes)   relevance-based (relevance=0.728056, probability=0.728056, bonus=1.000000, nodes=11 <= 218.416735)
                 n            @ 20  com.jprofiler.agent.AllocationCallee.registerAllocation0(Object, Class):void (0 bytes)   not inlining it is a non-intrinsic native method
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   relevance-based (relevance=0.728056, probability=0.728056, bonus=1.000000, nodes=18 <= 218.416735)
                              @ 44  java.lang.StringLatin1.equals(byte[], byte[]):boolean (36 bytes)   relevance-based (relevance=1.000000, probability=0.825612, bonus=1.000000, nodes=33 <= 300.000000)
                              @ 4  java.lang.CharacterDataLatin1.getProperties(int):int (11 bytes)   trivial (relevance=1.570184, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.158994, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 1  java.lang.String.length():int (11 bytes)   trivial (relevance=1.180814, probability=1.000000, bonus=1.000000, nodes=8)
                                @ 51  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.180816, probability=0.153127, bonus=1.000000, nodes=8)
                              @ 43  jdk.internal.org.objectweb.asm.ByteVector.enlarge(int):void (78 bytes)   relevance-based (relevance=0.180814, probability=0.153127, bonus=1.000000, nodes=36 <= 54.244306)
                                @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=24.265698, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                                @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=24.265698, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 85  java.lang.String.charAt(int):char (25 bytes)   relevance-based (relevance=1.000000, probability=24.265698, bonus=1.000000, nodes=16 <= 300.000000)
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.285844, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 49  java.lang.StringConcatHelper.newArray(long):byte[] (40 bytes)   inline method (bytecode parsing)
                            @ 123  java.lang.String.<init>(byte[], byte):void (15 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 41  java.lang.StringLatin1.canEncode(int):boolean (13 bytes)   trivial (relevance=0.742287, probability=0.742287, bonus=1.000000, nodes=8)
                            @ 11  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 29  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                            @ 44  java.lang.IllegalArgumentException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.RuntimeException.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                @ 2  java.lang.Exception.<init>(String):void (6 bytes)   inline method (bytecode parsing)
                                  @ 12  java.lang.String.__ejt_array_alloc(Object):void (11 bytes)   trivial (relevance=0.742287, probability=0.742287, bonus=1.000000, nodes=8)
                                @ 51  jdk.internal.misc.Unsafe.allocateUninitializedArray0(Class, int):Object (123 bytes)   relevance-based (relevance=0.742287, probability=0.742287, bonus=1.000000, nodes=10 <= 222.686230)
                              @ 33  jdk.internal.misc.Unsafe.allocateUninitializedArray(Class, int):Object (55 bytes)   relevance-based (relevance=0.742287, probability=0.742287, bonus=1.000000, nodes=11 <= 222.686230)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=0.742287, probability=0.742287, bonus=1.000000, nodes=8)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                              @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                                @ 17  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=0.277543, probability=0.183533, bonus=1.000000, nodes=9)
                                @ 27  java.lang.StringLatin1.hashCode(byte[]):int (52 bytes)   relevance-based (relevance=0.277543, probability=0.183533, bonus=1.000000, nodes=22 <= 83.262880)
                              @ 9  java.lang.String.hashCode():int (60 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=53 <= 300.000000)
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                                @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 9  java.util.HashMap$Node.<init>(int, Object, Object, HashMap$Node):void (26 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=21 <= 300.000000)
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 230  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.121677, probability=0.109963, bonus=1.000000, nodes=21 <= 36.502999)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.121677, probability=0.109963, bonus=1.000000, nodes=28 <= 36.502999)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.121677, probability=0.109963, bonus=1.000000, nodes=34 <= 36.502999)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   not inlining relevance-based (relevance=0.121677, probability=0.109963, bonus=1.000000, nodes=47 > 36.502999)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 6  com.jprofiler.agent.InstrumentationCallee.__ejt_enterMethod(short, short):void (25 bytes)   inline method (bytecode parsing)
                              @ 17  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 230  com.jprofiler.agent.InstrumentationCallee.__ejt_exitMethod(short, short):void (22 bytes)   inline method (bytecode parsing)
                              @ 15  com.jprofiler.agent.InstrumentationCallee.getThreadManagerPointer():long (7 bytes)   inline method (bytecode parsing)
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.297003, probability=0.228992, bonus=1.000000, nodes=21 <= 89.100946)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.297003, probability=0.228992, bonus=1.000000, nodes=28 <= 89.100946)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.297003, probability=0.228992, bonus=1.000000, nodes=34 <= 89.100946)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   relevance-based (relevance=0.297003, probability=0.228992, bonus=1.000000, nodes=47 <= 89.100946)
                 n          @ 21  com.jprofiler.agent.InstrumentationCallee.enterMethod(int, short, boolean, long, boolean):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 2  java.lang.ThreadLocal.getMap(Thread):ThreadLocal$ThreadLocalMap (5 bytes)   inline method (bytecode parsing)
                            @ 26  java.lang.ref.Reference.refersTo(Object):boolean (6 bytes)   inline method (bytecode parsing)
                              @ 2  java.lang.ref.Reference.refersToImpl(Object):boolean (6 bytes)   inline method (bytecode parsing)
                                    @ 12  java.lang.ThreadLocal$ThreadLocalMap.getEntry(ThreadLocal):ThreadLocal$ThreadLocalMap$Entry (42 bytes)   relevance-based (relevance=0.143276, probability=0.110467, bonus=1.000000, nodes=21 <= 42.982721)
                                  @ 4  java.lang.ThreadLocal.get(Thread):Object (35 bytes)   relevance-based (relevance=0.143276, probability=0.110467, bonus=1.000000, nodes=28 <= 42.982721)
                                @ 3  java.lang.ThreadLocal.get():Object (8 bytes)   relevance-based (relevance=0.143276, probability=0.110467, bonus=1.000000, nodes=34 <= 42.982721)
                              @ 0  com.jprofiler.agent.JProfilerThreadManager.getJProfilerThreadManager():JProfilerThreadManager (41 bytes)   not inlining relevance-based (relevance=0.143276, probability=0.110467, bonus=1.000000, nodes=47 > 42.982721)
                 n          @ 18  com.jprofiler.agent.InstrumentationCallee.exitMethod(int, long):void (0 bytes)   not inlining it is a non-intrinsic native method
                            @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                            @ 7  jdk.internal.org.objectweb.asm.Symbol.<init>(int, int, String, String, String, long):void (38 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Object.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 1  com.jprofiler.agent.AllocationCallee.__ejt_alloc(Object):void (24 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 18  jdk.internal.org.objectweb.asm.ByteVector.enlarge(int):void (78 bytes)   not inlining relevance-based (relevance=0.003202, probability=0.003192, bonus=1.000000, nodes=35 > 0.960633)
