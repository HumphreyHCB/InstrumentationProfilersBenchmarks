VM Arguments: 
sun.java.command=Harness Storage 10 1800
                              @ 17  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=0.170417, probability=0.144687, bonus=1.000000, nodes=9)
                              @ 27  java.lang.StringLatin1.hashCode(byte[]):int (52 bytes)   relevance-based (relevance=0.170417, probability=0.144687, bonus=1.000000, nodes=22 <= 51.125017)
                            @ 1  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 13  Storage.lambda$buildTreeDepth$0(int, Random, int):Object (9 bytes)   inline method (bytecode parsing)
                            @ 37  java.lang.invoke.LambdaForm$MH/0x00007ff998007800.linkToTargetMethod(Object, int, Object, Object):Object (11 bytes)   inline method (bytecode parsing)
                              @ 7  java.lang.invoke.LambdaForm$DMH/0x00007ff998007000.newInvokeSpecial(Object, Object, int, Object):Object (28 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.invoke.DirectMethodHandle.allocateInstance(Object):Object (16 bytes)   inline method (bytecode parsing)
                                @ 7  java.lang.invoke.DirectMethodHandle.constructorMethod(Object):Object (10 bytes)   inline method (bytecode parsing)
                                  @ 22  Storage$$Lambda/0x00007ff998003700.<init>(Storage, int, Random):void (20 bytes)   relevance-based (relevance=0.333249, probability=0.999833, bonus=1.000000, nodes=14 <= 99.974826)
                            @ 1  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 13  Storage.lambda$buildTreeDepth$0(int, Random, int):Object (9 bytes)   inline method (bytecode parsing)
                            @ 37  java.lang.invoke.LambdaForm$MH/0x00007ff998007800.linkToTargetMethod(Object, int, Object, Object):Object (11 bytes)   inline method (bytecode parsing)
                              @ 7  java.lang.invoke.LambdaForm$DMH/0x00007ff998007000.newInvokeSpecial(Object, Object, int, Object):Object (28 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.invoke.DirectMethodHandle.allocateInstance(Object):Object (16 bytes)   inline method (bytecode parsing)
                                @ 7  java.lang.invoke.DirectMethodHandle.constructorMethod(Object):Object (10 bytes)   inline method (bytecode parsing)
                                        @ 22  Storage$$Lambda/0x00007ff998003700.<init>(Storage, int, Random):void (20 bytes)   relevance-based (relevance=0.111055, probability=0.999666, bonus=1.000000, nodes=14 <= 33.316553)
                            @ 1  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                            @ 13  Storage.lambda$buildTreeDepth$0(int, Random, int):Object (9 bytes)   inline method (bytecode parsing)
                            @ 37  java.lang.invoke.LambdaForm$MH/0x00007ff998007800.linkToTargetMethod(Object, int, Object, Object):Object (11 bytes)   inline method (bytecode parsing)
                              @ 7  java.lang.invoke.LambdaForm$DMH/0x00007ff998007000.newInvokeSpecial(Object, Object, int, Object):Object (28 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.invoke.DirectMethodHandle.allocateInstance(Object):Object (16 bytes)   inline method (bytecode parsing)
                                @ 7  java.lang.invoke.DirectMethodHandle.constructorMethod(Object):Object (10 bytes)   inline method (bytecode parsing)
                                            @ 5  Storage.buildTreeDepth(int, Random):Object (47 bytes)   not inlining relevance-based (relevance=0.111055, probability=3.998748, bonus=1.000000, nodes=36 > 33.316553)
                                          @ 17  Storage$$Lambda/0x00007ff998003700.apply(int):Object (17 bytes)   relevance-based (relevance=0.111055, probability=3.998748, bonus=1.000000, nodes=17 <= 33.316553)
                                        @ 42  java.util.Arrays.setAll(Object[], IntFunction):void (30 bytes)   not inlining relevance-based (relevance=0.111055, probability=0.999666, bonus=1.000000, nodes=34 > 33.316553)
                                        @ 16  som.Random.next():int (24 bytes)   relevance-based (relevance=0.333249, probability=2.999752, bonus=1.000000, nodes=14 <= 99.974826)
                                      @ 5  Storage.buildTreeDepth(int, Random):Object (47 bytes)   relevance-based (relevance=0.333249, probability=3.999417, bonus=1.000000, nodes=51 <= 99.974826)
                                    @ 17  Storage$$Lambda/0x00007ff998003700.apply(int):Object (17 bytes)   relevance-based (relevance=0.333249, probability=3.999417, bonus=1.000000, nodes=65 <= 99.974826)
                                  @ 42  java.util.Arrays.setAll(Object[], IntFunction):void (30 bytes)   relevance-based (relevance=0.333249, probability=0.999833, bonus=1.000000, nodes=81 <= 99.974826)
                                  @ 16  som.Random.next():int (24 bytes)   relevance-based (relevance=1.000000, probability=3.000254, bonus=1.000000, nodes=14 <= 300.000000)
                                @ 5  Storage.buildTreeDepth(int, Random):Object (47 bytes)   relevance-based (relevance=1.000000, probability=4.000086, bonus=1.000000, nodes=117 <= 300.000000)
                              @ 17  Storage$$Lambda/0x00007ff998003700.apply(int):Object (17 bytes)   relevance-based (relevance=1.000000, probability=4.000086, bonus=1.000000, nodes=129 <= 300.000000)
                            @ 37  java.lang.invoke.LambdaForm$MH/0x00007ff998007800.linkToTargetMethod(Object, int, Object, Object):Object (11 bytes)   inline method (bytecode parsing)
                              @ 7  java.lang.invoke.LambdaForm$DMH/0x00007ff998007000.newInvokeSpecial(Object, Object, int, Object):Object (28 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.invoke.DirectMethodHandle.allocateInstance(Object):Object (16 bytes)   inline method (bytecode parsing)
                                @ 7  java.lang.invoke.DirectMethodHandle.constructorMethod(Object):Object (10 bytes)   inline method (bytecode parsing)
                              @ 22  Storage$$Lambda/0x00007ff998003700.<init>(Storage, int, Random):void (20 bytes)   relevance-based (relevance=0.333370, probability=0.250021, bonus=1.000000, nodes=14 <= 100.011044)
                            @ 1  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                              @ 42  java.util.Arrays.setAll(Object[], IntFunction):void (30 bytes)   not inlining too large previous low-level graph (low-level-nodes: 1990, relevance=0.333370, probability=0.250021, bonus=1.000000, nodes=24)
                              @ 16  som.Random.next():int (24 bytes)   relevance-based (relevance=1.000000, probability=0.749979, bonus=1.000000, nodes=14 <= 300.000000)
                              @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                              @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 44  java.lang.StringLatin1.equals(byte[], byte[]):boolean (36 bytes)   relevance-based (relevance=1.000000, probability=0.861027, bonus=1.000000, nodes=33 <= 300.000000)
                              @ 4  som.Random.<init>():void (11 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=7)
                            @ 37  java.lang.invoke.LambdaForm$MH/0x00007ff998007800.linkToTargetMethod(Object, int, Object, Object):Object (11 bytes)   inline method (bytecode parsing)
                              @ 7  java.lang.invoke.LambdaForm$DMH/0x00007ff998007000.newInvokeSpecial(Object, Object, int, Object):Object (28 bytes)   inline method (bytecode parsing)
                                @ 1  java.lang.invoke.DirectMethodHandle.allocateInstance(Object):Object (16 bytes)   inline method (bytecode parsing)
                                @ 7  java.lang.invoke.DirectMethodHandle.constructorMethod(Object):Object (10 bytes)   inline method (bytecode parsing)
                                @ 22  Storage$$Lambda/0x00007ff998003700.<init>(Storage, int, Random):void (20 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=14 <= 300.000000)
                            @ 1  java.util.Objects.requireNonNull(Object):Object (14 bytes)   inline method (bytecode parsing)
                                @ 42  java.util.Arrays.setAll(Object[], IntFunction):void (30 bytes)   not inlining too large previous low-level graph (low-level-nodes: 1990, relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=24)
                              @ 17  Storage.buildTreeDepth(int, Random):Object (47 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=28 <= 300.000000)
