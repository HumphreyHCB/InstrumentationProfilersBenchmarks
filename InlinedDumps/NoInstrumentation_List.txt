VM Arguments: 
sun.java.command=Harness List 10 10000
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                              @ 3  List.isShorterThan(List$Element, List$Element):boolean (33 bytes)   relevance-based (relevance=1.333176, probability=1.000000, bonus=1.000000, nodes=30 <= 300.000000)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 3  List.isShorterThan(List$Element, List$Element):boolean (33 bytes)   relevance-based (relevance=0.333179, probability=0.249914, bonus=1.000000, nodes=30 <= 99.953767)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 17  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 40  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                              @ 17  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   relevance-based (relevance=0.249914, probability=0.249914, bonus=1.000000, nodes=55 <= 74.974173)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 3  List.isShorterThan(List$Element, List$Element):boolean (33 bytes)   relevance-based (relevance=0.333179, probability=0.249914, bonus=1.000000, nodes=30 <= 99.953767)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 17  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 40  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                              @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   relevance-based (relevance=0.249914, probability=0.249914, bonus=1.000000, nodes=55 <= 74.974173)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 3  List.isShorterThan(List$Element, List$Element):boolean (33 bytes)   relevance-based (relevance=0.333179, probability=0.249914, bonus=1.000000, nodes=30 <= 99.953767)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 17  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 40  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                              @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   relevance-based (relevance=0.249914, probability=0.249914, bonus=1.000000, nodes=55 <= 74.974173)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 3  List.isShorterThan(List$Element, List$Element):boolean (33 bytes)   relevance-based (relevance=0.333179, probability=0.249914, bonus=1.000000, nodes=30 <= 99.953767)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 17  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 40  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062457, probability=0.062457, bonus=1.000000, nodes=40 > 18.737089)
                              @ 40  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   relevance-based (relevance=0.249914, probability=0.249914, bonus=1.000000, nodes=55 <= 74.974173)
                              @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                              @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=11 <= 300.000000)
                            @ 14  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                            @ 26  List$Element.setNext(List$Element):void (6 bytes)   inline method (bytecode parsing)
                            @ 14  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                            @ 26  List$Element.setNext(List$Element):void (6 bytes)   inline method (bytecode parsing)
                            @ 14  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                            @ 26  List$Element.setNext(List$Element):void (6 bytes)   inline method (bytecode parsing)
                            @ 14  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                            @ 26  List$Element.setNext(List$Element):void (6 bytes)   inline method (bytecode parsing)
                            @ 14  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                            @ 26  List$Element.setNext(List$Element):void (6 bytes)   inline method (bytecode parsing)
                            @ 14  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                            @ 26  List$Element.setNext(List$Element):void (6 bytes)   inline method (bytecode parsing)
                                      @ 23  List.makeList(int):List$Element (31 bytes)   not inlining it exceeds the maximum recursive inlining depth
                                      @ 23  List.makeList(int):List$Element (31 bytes)   relevance-based (relevance=1.000000, probability=0.630106, bonus=1.000000, nodes=25 <= 300.000000)
                                    @ 23  List.makeList(int):List$Element (31 bytes)   relevance-based (relevance=1.000000, probability=0.691084, bonus=1.000000, nodes=46 <= 300.000000)
                                  @ 23  List.makeList(int):List$Element (31 bytes)   relevance-based (relevance=1.000000, probability=0.757964, bonus=1.000000, nodes=67 <= 300.000000)
                                @ 23  List.makeList(int):List$Element (31 bytes)   relevance-based (relevance=1.000000, probability=0.831315, bonus=1.000000, nodes=88 <= 300.000000)
                              @ 23  List.makeList(int):List$Element (31 bytes)   relevance-based (relevance=1.000000, probability=0.911765, bonus=1.000000, nodes=109 <= 300.000000)
                            @ 28  java.lang.Integer.<init>(int):void (10 bytes)   inline method (bytecode parsing)
                              @ 1  java.lang.Number.<init>():void (5 bytes)   inline method (bytecode parsing)
                              @ 17  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=0.170752, probability=0.144897, bonus=1.000000, nodes=9)
                              @ 27  java.lang.StringLatin1.hashCode(byte[]):int (52 bytes)   relevance-based (relevance=0.170752, probability=0.144897, bonus=1.000000, nodes=22 <= 51.225501)
                            @ 14  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                            @ 26  List$Element.setNext(List$Element):void (6 bytes)   inline method (bytecode parsing)
                              @ 4  List.makeList(int):List$Element (31 bytes)   not inlining too large previous low-level graph (low-level-nodes: 593, relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=17)
                            @ 14  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                            @ 26  List$Element.setNext(List$Element):void (6 bytes)   inline method (bytecode parsing)
                              @ 10  List.makeList(int):List$Element (31 bytes)   not inlining too large previous low-level graph (low-level-nodes: 593, relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=17)
                            @ 14  List$Element.<init>(Object):void (10 bytes)   inline method (bytecode parsing)
                            @ 26  List$Element.setNext(List$Element):void (6 bytes)   inline method (bytecode parsing)
                              @ 16  List.makeList(int):List$Element (31 bytes)   not inlining too large previous low-level graph (low-level-nodes: 593, relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=17)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                @ 3  List.isShorterThan(List$Element, List$Element):boolean (33 bytes)   relevance-based (relevance=1.333173, probability=1.000000, bonus=1.000000, nodes=30 <= 300.000000)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 3  List.isShorterThan(List$Element, List$Element):boolean (33 bytes)   relevance-based (relevance=0.333175, probability=0.249911, bonus=1.000000, nodes=30 <= 99.952536)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 17  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 40  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                                @ 17  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   relevance-based (relevance=0.249911, probability=0.249911, bonus=1.000000, nodes=55 <= 74.973414)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 3  List.isShorterThan(List$Element, List$Element):boolean (33 bytes)   relevance-based (relevance=0.333175, probability=0.249911, bonus=1.000000, nodes=30 <= 99.952536)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 17  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 40  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                                @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   relevance-based (relevance=0.249911, probability=0.249911, bonus=1.000000, nodes=55 <= 74.973414)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 3  List.isShorterThan(List$Element, List$Element):boolean (33 bytes)   relevance-based (relevance=0.333175, probability=0.249911, bonus=1.000000, nodes=30 <= 99.952536)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 17  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 40  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                                @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   relevance-based (relevance=0.249911, probability=0.249911, bonus=1.000000, nodes=55 <= 74.973414)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 17  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 23  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 3  List.isShorterThan(List$Element, List$Element):boolean (33 bytes)   relevance-based (relevance=0.333175, probability=0.249911, bonus=1.000000, nodes=30 <= 99.952536)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 17  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 27  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 37  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                            @ 12  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 22  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                            @ 32  List$Element.getNext():List$Element (5 bytes)   inline accessor method (bytecode parsing)
                                  @ 40  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   not inlining relevance-based (relevance=0.062456, probability=0.062456, bonus=1.000000, nodes=40 > 18.736710)
                                @ 40  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   relevance-based (relevance=0.249911, probability=0.249911, bonus=1.000000, nodes=55 <= 74.973414)
                              @ 19  List.tail(List$Element, List$Element, List$Element):List$Element (46 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=249 <= 300.000000)
                                        @ 14  List$Element.length():int (19 bytes)   not inlining it exceeds the maximum recursive inlining depth
                                        @ 14  List$Element.length():int (19 bytes)   relevance-based (relevance=1.000000, probability=0.575036, bonus=1.000000, nodes=15 <= 300.000000)
                                      @ 14  List$Element.length():int (19 bytes)   relevance-based (relevance=1.000000, probability=0.642326, bonus=1.000000, nodes=29 <= 300.000000)
                                    @ 14  List$Element.length():int (19 bytes)   relevance-based (relevance=1.000000, probability=0.717492, bonus=1.000000, nodes=43 <= 300.000000)
                                  @ 14  List$Element.length():int (19 bytes)   relevance-based (relevance=1.000000, probability=0.801453, bonus=1.000000, nodes=57 <= 300.000000)
                                @ 14  List$Element.length():int (19 bytes)   relevance-based (relevance=1.000000, probability=0.895239, bonus=1.000000, nodes=71 <= 300.000000)
                              @ 24  List$Element.length():int (19 bytes)   relevance-based (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=85 <= 300.000000)
                                @ 6  java.lang.String.coder():byte (15 bytes)   trivial (relevance=1.000000, probability=1.000000, bonus=1.000000, nodes=5)
                              @ 1  java.lang.String.length():int (11 bytes)   trivial (relevance=1.169670, probability=1.000000, bonus=1.000000, nodes=8)
                              @ 43  jdk.internal.org.objectweb.asm.ByteVector.enlarge(int):void (73 bytes)   relevance-based (relevance=0.169670, probability=0.145058, bonus=1.000000, nodes=31 <= 50.900901)
                                @ 1  java.lang.String.isLatin1():boolean (19 bytes)   trivial (relevance=1.000000, probability=22.604621, bonus=1.000000, nodes=9)
                            @ 3  java.lang.String.checkIndex(int, int):void (10 bytes)   inline method (bytecode parsing)
                                @ 12  java.lang.StringLatin1.charAt(byte[], int):char (15 bytes)   relevance-based (relevance=1.000000, probability=22.604621, bonus=1.000000, nodes=11 <= 300.000000)
                              @ 85  java.lang.String.charAt(int):char (25 bytes)   relevance-based (relevance=1.000000, probability=22.604621, bonus=1.000000, nodes=16 <= 300.000000)
                              @ 44  java.lang.StringLatin1.equals(byte[], byte[]):boolean (36 bytes)   relevance-based (relevance=1.000000, probability=0.841432, bonus=1.000000, nodes=33 <= 300.000000)
